lfe_motion.tmc
==================

Records
-------
```
 "AT2L0:XTES:MMS:01:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:01:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:01:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:01:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:01:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:01:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:01:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:01:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:01:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:01:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:01:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:01:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:01:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:01:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:01:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:01:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:01:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:01:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:01:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:01:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:01:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:01:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:01:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:01:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:02:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:02:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:02:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:02:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:02:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:02:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:02:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:02:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:02:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:02:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:02:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:02:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:02:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:02:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:02:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:02:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:02:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:02:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:02:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:02:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:02:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:02:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:02:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:02:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:03:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:03:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:03:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:03:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:03:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:03:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:03:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:03:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:03:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:03:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:03:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:03:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:03:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:03:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:03:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:03:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:03:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:03:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:03:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:03:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:03:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:03:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:03:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:03:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:04:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:04:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:04:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:04:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:04:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:04:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:04:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:04:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:04:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:04:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:04:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:04:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:04:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:04:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:04:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:04:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:04:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:04:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:04:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:04:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:04:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:04:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:04:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:04:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:05:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:05:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:05:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:05:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:05:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:05:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:05:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:05:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:05:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:05:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:05:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:05:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:05:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:05:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:05:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:05:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:05:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:05:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:05:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:05:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:05:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:05:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:05:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:05:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:06:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:06:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:06:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:06:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:06:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:06:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:06:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:06:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:06:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:06:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:06:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:06:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:06:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:06:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:06:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:06:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:06:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:06:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:06:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:06:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:06:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:06:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:06:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:06:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:07:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:07:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:07:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:07:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:07:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:07:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:07:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:07:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:07:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:07:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:07:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:07:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:07:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:07:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:07:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:07:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:07:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:07:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:07:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:07:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:07:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:07:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:07:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:07:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:08:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:08:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:08:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:08:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:08:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:08:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:08:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:08:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:08:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:08:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:08:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:08:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:08:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:08:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:08:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:08:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:08:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:08:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:08:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:08:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:08:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:08:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:08:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:08:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:09:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:09:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:09:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:09:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:09:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:09:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:09:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:09:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:09:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:09:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:09:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:09:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:09:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:09:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:09:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:09:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:09:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:09:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:09:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:09:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:09:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:09:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:09:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:09:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:10:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:10:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:10:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:10:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:10:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:10:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:10:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:10:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:10:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:10:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:10:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:10:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:10:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:10:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:10:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:10:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:10:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:10:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:10:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:10:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:10:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:10:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:10:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:10:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:11:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:11:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:11:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:11:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:11:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:11:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:11:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:11:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:11:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:11:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:11:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:11:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:11:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:11:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:11:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:11:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:11:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:11:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:11:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:11:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:11:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:11:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:11:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:11:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:12:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:12:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:12:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:12:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:12:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:12:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:12:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:12:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:12:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:12:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:12:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:12:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:12:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:12:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:12:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:12:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:12:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:12:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:12:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:12:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:12:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:12:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:12:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:12:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:13:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:13:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:13:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:13:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:13:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:13:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:13:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:13:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:13:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:13:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:13:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:13:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:13:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:13:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:13:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:13:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:13:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:13:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:13:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:13:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:13:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:13:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:13:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:13:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:14:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:14:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:14:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:14:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:14:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:14:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:14:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:14:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:14:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:14:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:14:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:14:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:14:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:14:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:14:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:14:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:14:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:14:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:14:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:14:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:14:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:14:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:14:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:14:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:15:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:15:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:15:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:15:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:15:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:15:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:15:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:15:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:15:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:15:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:15:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:15:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:15:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:15:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:15:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:15:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:15:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:15:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:15:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:15:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:15:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:15:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:15:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:15:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:16:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:16:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:16:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:16:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:16:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:16:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:16:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:16:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:16:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:16:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:16:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:16:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:16:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:16:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:16:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:16:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:16:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:16:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:16:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:16:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:16:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:16:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:16:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:16:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:17:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:17:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:17:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:17:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:17:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:17:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:17:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:17:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:17:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:17:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:17:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:17:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:17:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:17:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:17:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:17:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:17:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:17:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:17:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:17:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:17:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:17:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:17:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:17:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:18:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:18:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:18:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:18:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:18:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:18:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:18:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:18:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:18:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:18:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:18:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:18:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:18:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:18:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:18:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:18:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:18:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:18:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:18:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:18:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:18:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:18:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:18:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:18:PLC:sErrorMessage_RBV" (waveform)
 "AT2L0:XTES:MMS:19:PLC:bAllBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bAllEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bAllForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bBrakeRelease_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bBusy_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bDone_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bEnable" (bo)
 "AT2L0:XTES:MMS:19:PLC:bEnableDone_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bError_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bExecute" (bo)
 "AT2L0:XTES:MMS:19:PLC:bExecute_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bGantryAxis_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bGantryBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bGantryForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bHardwareEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bHome_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bLimitBackwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bLimitForwardEnable_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bPowerSelf_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:bReset" (bo)
 "AT2L0:XTES:MMS:19:PLC:bReset_RBV" (bi)
 "AT2L0:XTES:MMS:19:PLC:fAcceleration" (ao)
 "AT2L0:XTES:MMS:19:PLC:fAcceleration_RBV" (ai)
 "AT2L0:XTES:MMS:19:PLC:fDeceleration" (ao)
 "AT2L0:XTES:MMS:19:PLC:fDeceleration_RBV" (ai)
 "AT2L0:XTES:MMS:19:PLC:fHomePosition" (ao)
 "AT2L0:XTES:MMS:19:PLC:fHomePosition_RBV" (ai)
 "AT2L0:XTES:MMS:19:PLC:fPosition" (ao)
 "AT2L0:XTES:MMS:19:PLC:fPosition_RBV" (ai)
 "AT2L0:XTES:MMS:19:PLC:fVelocity" (ao)
 "AT2L0:XTES:MMS:19:PLC:fVelocity_RBV" (ai)
 "AT2L0:XTES:MMS:19:PLC:nBrakeMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:19:PLC:nCmdData" (longout)
 "AT2L0:XTES:MMS:19:PLC:nCmdData_RBV" (longin)
 "AT2L0:XTES:MMS:19:PLC:nCommand" (longout)
 "AT2L0:XTES:MMS:19:PLC:nCommand_RBV" (longin)
 "AT2L0:XTES:MMS:19:PLC:nEnableMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:19:PLC:nErrorId_RBV" (longin)
 "AT2L0:XTES:MMS:19:PLC:nHomingMode_RBV" (mbbi)
 "AT2L0:XTES:MMS:19:PLC:nMotionAxisID_RBV" (longin)
 "AT2L0:XTES:MMS:19:PLC:sErrorMessage_RBV" (waveform)
 "IM1L0:XTES:CAM:PWR" (bo)
 "IM1L0:XTES:CAM:PWR_RBV" (bi)
 "IM1L0:XTES:CIL:AUTO" (bo)
 "IM1L0:XTES:CIL:AUTO_RBV" (bi)
 "IM1L0:XTES:CIL:CLK:REMAINING" (ao)
 "IM1L0:XTES:CIL:CLK:REMAINING_RBV" (ai)
 "IM1L0:XTES:CIL:CLK:TIMEOUT" (ao)
 "IM1L0:XTES:CIL:CLK:TIMEOUT_RBV" (ai)
 "IM1L0:XTES:CIL:PWR" (bo)
 "IM1L0:XTES:CIL:PWR_RBV" (bi)
 "IM1L0:XTES:CLF:LOCK" (bo)
 "IM1L0:XTES:CLF:LOCK_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bAllEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bAllForwardEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bBrakeRelease_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bBusy_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bDone_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bEnable" (bo)
 "IM1L0:XTES:CLF:PLC:bEnableDone_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bError_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bExecute" (bo)
 "IM1L0:XTES:CLF:PLC:bExecute_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bGantryAxis_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bHardwareEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bHome_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bPowerSelf_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:bReset" (bo)
 "IM1L0:XTES:CLF:PLC:bReset_RBV" (bi)
 "IM1L0:XTES:CLF:PLC:fAcceleration" (ao)
 "IM1L0:XTES:CLF:PLC:fAcceleration_RBV" (ai)
 "IM1L0:XTES:CLF:PLC:fDeceleration" (ao)
 "IM1L0:XTES:CLF:PLC:fDeceleration_RBV" (ai)
 "IM1L0:XTES:CLF:PLC:fHomePosition" (ao)
 "IM1L0:XTES:CLF:PLC:fHomePosition_RBV" (ai)
 "IM1L0:XTES:CLF:PLC:fPosition" (ao)
 "IM1L0:XTES:CLF:PLC:fPosition_RBV" (ai)
 "IM1L0:XTES:CLF:PLC:fVelocity" (ao)
 "IM1L0:XTES:CLF:PLC:fVelocity_RBV" (ai)
 "IM1L0:XTES:CLF:PLC:nBrakeMode_RBV" (mbbi)
 "IM1L0:XTES:CLF:PLC:nCmdData" (longout)
 "IM1L0:XTES:CLF:PLC:nCmdData_RBV" (longin)
 "IM1L0:XTES:CLF:PLC:nCommand" (longout)
 "IM1L0:XTES:CLF:PLC:nCommand_RBV" (longin)
 "IM1L0:XTES:CLF:PLC:nEnableMode_RBV" (mbbi)
 "IM1L0:XTES:CLF:PLC:nErrorId_RBV" (longin)
 "IM1L0:XTES:CLF:PLC:nHomingMode_RBV" (mbbi)
 "IM1L0:XTES:CLF:PLC:nMotionAxisID_RBV" (longin)
 "IM1L0:XTES:CLF:PLC:sErrorMessage_RBV" (waveform)
 "IM1L0:XTES:CLZ:LOCK" (bo)
 "IM1L0:XTES:CLZ:LOCK_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bAllEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bAllForwardEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bBrakeRelease_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bBusy_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bDone_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bEnable" (bo)
 "IM1L0:XTES:CLZ:PLC:bEnableDone_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bError_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bExecute" (bo)
 "IM1L0:XTES:CLZ:PLC:bExecute_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bGantryAxis_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bHardwareEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bHome_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bPowerSelf_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:bReset" (bo)
 "IM1L0:XTES:CLZ:PLC:bReset_RBV" (bi)
 "IM1L0:XTES:CLZ:PLC:fAcceleration" (ao)
 "IM1L0:XTES:CLZ:PLC:fAcceleration_RBV" (ai)
 "IM1L0:XTES:CLZ:PLC:fDeceleration" (ao)
 "IM1L0:XTES:CLZ:PLC:fDeceleration_RBV" (ai)
 "IM1L0:XTES:CLZ:PLC:fHomePosition" (ao)
 "IM1L0:XTES:CLZ:PLC:fHomePosition_RBV" (ai)
 "IM1L0:XTES:CLZ:PLC:fPosition" (ao)
 "IM1L0:XTES:CLZ:PLC:fPosition_RBV" (ai)
 "IM1L0:XTES:CLZ:PLC:fVelocity" (ao)
 "IM1L0:XTES:CLZ:PLC:fVelocity_RBV" (ai)
 "IM1L0:XTES:CLZ:PLC:nBrakeMode_RBV" (mbbi)
 "IM1L0:XTES:CLZ:PLC:nCmdData" (longout)
 "IM1L0:XTES:CLZ:PLC:nCmdData_RBV" (longin)
 "IM1L0:XTES:CLZ:PLC:nCommand" (longout)
 "IM1L0:XTES:CLZ:PLC:nCommand_RBV" (longin)
 "IM1L0:XTES:CLZ:PLC:nEnableMode_RBV" (mbbi)
 "IM1L0:XTES:CLZ:PLC:nErrorId_RBV" (longin)
 "IM1L0:XTES:CLZ:PLC:nHomingMode_RBV" (mbbi)
 "IM1L0:XTES:CLZ:PLC:nMotionAxisID_RBV" (longin)
 "IM1L0:XTES:CLZ:PLC:sErrorMessage_RBV" (waveform)
 "IM1L0:XTES:MFW:ERR:MSG_RBV" (waveform)
 "IM1L0:XTES:MFW:ERR:RESET" (bo)
 "IM1L0:XTES:MFW:ERR:RESET_RBV" (bi)
 "IM1L0:XTES:MFW:GET_RBV" (mbbi)
 "IM1L0:XTES:MFW:RAW:CMD_RBV" (waveform)
 "IM1L0:XTES:MFW:RAW:CMD" (waveform)
 "IM1L0:XTES:MFW:RAW:DONE_RBV" (bi)
 "IM1L0:XTES:MFW:RAW:ERR:RECV_RBV" (mbbi)
 "IM1L0:XTES:MFW:RAW:ERR:SEND_RBV" (mbbi)
 "IM1L0:XTES:MFW:RAW:ERR:SER_RBV" (mbbi)
 "IM1L0:XTES:MFW:RAW:RESP_RBV" (waveform)
 "IM1L0:XTES:MFW:RAW:SEND" (bo)
 "IM1L0:XTES:MFW:RAW:SEND_RBV" (bi)
 "IM1L0:XTES:MFW:SET" (mbbo)
 "IM1L0:XTES:MFW:SET_RBV" (mbbi)
 "IM1L0:XTES:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bAllEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bBusy_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bDone_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bEnable" (bo)
 "IM1L0:XTES:MMS:PLC:bEnableDone_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bError_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bExecute" (bo)
 "IM1L0:XTES:MMS:PLC:bExecute_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bHome_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:bReset" (bo)
 "IM1L0:XTES:MMS:PLC:bReset_RBV" (bi)
 "IM1L0:XTES:MMS:PLC:fAcceleration" (ao)
 "IM1L0:XTES:MMS:PLC:fAcceleration_RBV" (ai)
 "IM1L0:XTES:MMS:PLC:fDeceleration" (ao)
 "IM1L0:XTES:MMS:PLC:fDeceleration_RBV" (ai)
 "IM1L0:XTES:MMS:PLC:fHomePosition" (ao)
 "IM1L0:XTES:MMS:PLC:fHomePosition_RBV" (ai)
 "IM1L0:XTES:MMS:PLC:fPosition" (ao)
 "IM1L0:XTES:MMS:PLC:fPosition_RBV" (ai)
 "IM1L0:XTES:MMS:PLC:fVelocity" (ao)
 "IM1L0:XTES:MMS:PLC:fVelocity_RBV" (ai)
 "IM1L0:XTES:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM1L0:XTES:MMS:PLC:nCmdData" (longout)
 "IM1L0:XTES:MMS:PLC:nCmdData_RBV" (longin)
 "IM1L0:XTES:MMS:PLC:nCommand" (longout)
 "IM1L0:XTES:MMS:PLC:nCommand_RBV" (longin)
 "IM1L0:XTES:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM1L0:XTES:MMS:PLC:nErrorId_RBV" (longin)
 "IM1L0:XTES:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM1L0:XTES:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM1L0:XTES:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:01:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:01:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:01:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:01:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:01:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:01:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:01:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:01:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:01:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:01:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:01:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:02:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:02:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:02:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:02:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:02:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:02:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:02:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:02:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:02:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:02:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:02:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:03:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:03:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:03:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:03:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:03:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:03:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:03:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:03:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:03:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:03:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:03:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:04:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:04:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:04:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:04:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:04:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:04:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:04:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:04:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:04:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:04:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:04:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:05:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:05:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:05:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:05:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:05:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:05:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:05:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:05:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:05:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:05:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:05:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:06:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:06:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:06:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:06:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:06:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:06:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:06:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:06:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:06:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:06:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:06:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:07:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:07:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:07:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:07:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:07:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:07:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:07:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:07:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:07:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:07:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:07:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:08:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:08:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:08:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:08:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:08:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:08:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:08:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:08:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:08:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:08:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:08:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:09:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:09:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:09:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:09:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:09:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:09:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:09:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:09:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:09:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:09:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:09:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:10:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:10:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:10:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:10:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:10:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:10:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:10:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:10:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:10:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:10:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:10:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:11:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:11:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:11:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:11:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:11:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:11:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:11:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:11:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:11:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:11:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:11:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:12:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:12:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:12:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:12:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:12:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:12:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:12:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:12:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:12:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:12:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:12:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:13:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:13:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:13:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:13:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:13:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:13:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:13:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:13:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:13:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:13:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:13:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:14:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:14:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:14:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:14:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:14:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:14:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:14:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:14:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:14:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:14:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:14:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:15:ACCL" (ao)
 "IM1L0:XTES:MMS:STATE:15:ACCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:15:DCCL" (ao)
 "IM1L0:XTES:MMS:STATE:15:DCCL_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:15:DELTA" (ao)
 "IM1L0:XTES:MMS:STATE:15:DELTA_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:15:NAME_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:15:SETPOINT" (ao)
 "IM1L0:XTES:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:15:VALID_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:15:VELO" (ao)
 "IM1L0:XTES:MMS:STATE:15:VELO_RBV" (ai)
 "IM1L0:XTES:MMS:STATE:BUSY_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:DONE_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:ERRID_RBV" (longin)
 "IM1L0:XTES:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM1L0:XTES:MMS:STATE:ERR_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:GET_RBV" (mbbi)
 "IM1L0:XTES:MMS:STATE:RESET" (bo)
 "IM1L0:XTES:MMS:STATE:RESET_RBV" (bi)
 "IM1L0:XTES:MMS:STATE:SET" (mbbo)
 "IM1L0:XTES:MMS:STATE:SET_RBV" (mbbi)
 "IM1L0:XTES:SFW:FLOW" (bo)
 "IM1L0:XTES:SFW:FLOW_RBV" (bi)
 "IM1L1:PPM:CAM:CIL:PCT" (ao)
 "IM1L1:PPM:CAM:CIL:PCT_RBV" (ai)
 "IM1L1:PPM:CAM:PWR" (bo)
 "IM1L1:PPM:CAM:PWR_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bAllEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bBusy_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bDone_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bEnable" (bo)
 "IM1L1:PPM:MMS:PLC:bEnableDone_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bError_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bExecute" (bo)
 "IM1L1:PPM:MMS:PLC:bExecute_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bHome_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:bReset" (bo)
 "IM1L1:PPM:MMS:PLC:bReset_RBV" (bi)
 "IM1L1:PPM:MMS:PLC:fAcceleration" (ao)
 "IM1L1:PPM:MMS:PLC:fAcceleration_RBV" (ai)
 "IM1L1:PPM:MMS:PLC:fDeceleration" (ao)
 "IM1L1:PPM:MMS:PLC:fDeceleration_RBV" (ai)
 "IM1L1:PPM:MMS:PLC:fHomePosition" (ao)
 "IM1L1:PPM:MMS:PLC:fHomePosition_RBV" (ai)
 "IM1L1:PPM:MMS:PLC:fPosition" (ao)
 "IM1L1:PPM:MMS:PLC:fPosition_RBV" (ai)
 "IM1L1:PPM:MMS:PLC:fVelocity" (ao)
 "IM1L1:PPM:MMS:PLC:fVelocity_RBV" (ai)
 "IM1L1:PPM:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM1L1:PPM:MMS:PLC:nCmdData" (longout)
 "IM1L1:PPM:MMS:PLC:nCmdData_RBV" (longin)
 "IM1L1:PPM:MMS:PLC:nCommand" (longout)
 "IM1L1:PPM:MMS:PLC:nCommand_RBV" (longin)
 "IM1L1:PPM:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM1L1:PPM:MMS:PLC:nErrorId_RBV" (longin)
 "IM1L1:PPM:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM1L1:PPM:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM1L1:PPM:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:01:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:01:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:01:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:01:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:01:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:01:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:01:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:01:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:01:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:01:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:01:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:02:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:02:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:02:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:02:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:02:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:02:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:02:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:02:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:02:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:02:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:02:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:03:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:03:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:03:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:03:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:03:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:03:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:03:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:03:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:03:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:03:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:03:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:04:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:04:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:04:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:04:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:04:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:04:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:04:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:04:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:04:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:04:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:04:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:05:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:05:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:05:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:05:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:05:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:05:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:05:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:05:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:05:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:05:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:05:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:06:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:06:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:06:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:06:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:06:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:06:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:06:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:06:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:06:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:06:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:06:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:07:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:07:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:07:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:07:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:07:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:07:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:07:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:07:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:07:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:07:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:07:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:08:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:08:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:08:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:08:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:08:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:08:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:08:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:08:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:08:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:08:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:08:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:09:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:09:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:09:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:09:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:09:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:09:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:09:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:09:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:09:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:09:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:09:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:10:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:10:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:10:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:10:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:10:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:10:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:10:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:10:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:10:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:10:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:10:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:11:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:11:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:11:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:11:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:11:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:11:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:11:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:11:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:11:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:11:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:11:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:12:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:12:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:12:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:12:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:12:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:12:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:12:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:12:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:12:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:12:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:12:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:13:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:13:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:13:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:13:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:13:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:13:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:13:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:13:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:13:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:13:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:13:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:14:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:14:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:14:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:14:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:14:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:14:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:14:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:14:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:14:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:14:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:14:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:15:ACCL" (ao)
 "IM1L1:PPM:MMS:STATE:15:ACCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:15:DCCL" (ao)
 "IM1L1:PPM:MMS:STATE:15:DCCL_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:15:DELTA" (ao)
 "IM1L1:PPM:MMS:STATE:15:DELTA_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:15:NAME_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:15:SETPOINT" (ao)
 "IM1L1:PPM:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:15:VALID_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:15:VELO" (ao)
 "IM1L1:PPM:MMS:STATE:15:VELO_RBV" (ai)
 "IM1L1:PPM:MMS:STATE:BUSY_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:DONE_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:ERRID_RBV" (longin)
 "IM1L1:PPM:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM1L1:PPM:MMS:STATE:ERR_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:GET_RBV" (mbbi)
 "IM1L1:PPM:MMS:STATE:RESET" (bo)
 "IM1L1:PPM:MMS:STATE:RESET_RBV" (bi)
 "IM1L1:PPM:MMS:STATE:SET" (mbbo)
 "IM1L1:PPM:MMS:STATE:SET_RBV" (mbbi)
 "IM1L1:PPM:SFM:FLOW_RBV" (ai)
 "IM1L1:PPM:SFM:MA_RBV" (longin)
 "IM1L1:PPM:SPM:CALIB_BUFFER_RBV" (waveform)
 "IM1L1:PPM:SPM:CALIB:MJ_RATIO" (ao)
 "IM1L1:PPM:SPM:CALIB:MJ_RATIO_RBV" (ai)
 "IM1L1:PPM:SPM:CALIB:OFFSET" (ao)
 "IM1L1:PPM:SPM:CALIB:OFFSET_RBV" (ai)
 "IM1L1:PPM:SPM:CALIB:RATIO" (ao)
 "IM1L1:PPM:SPM:CALIB:RATIO_RBV" (ai)
 "IM1L1:PPM:SPM:CALIB_RBV" (ai)
 "IM1L1:PPM:SPM:MJ_BUFFER_RBV" (waveform)
 "IM1L1:PPM:SPM:MJ_RBV" (ai)
 "IM1L1:PPM:SPM:STC:CONN_RBV" (bi)
 "IM1L1:PPM:SPM:STC:ERR_RBV" (bi)
 "IM1L1:PPM:SPM:STC:TEMP_RBV" (ai)
 "IM1L1:PPM:SPM:VOLT_BUFFER_RBV" (waveform)
 "IM1L1:PPM:SPM:VOLT_RBV" (ai)
 "IM1L1:PPM:YAG:STC:CONN_RBV" (bi)
 "IM1L1:PPM:YAG:STC:ERR_RBV" (bi)
 "IM1L1:PPM:YAG:STC:TEMP_RBV" (ai)
 "IM2L0:XTES:CAM:PWR" (bo)
 "IM2L0:XTES:CAM:PWR_RBV" (bi)
 "IM2L0:XTES:CIL:AUTO" (bo)
 "IM2L0:XTES:CIL:AUTO_RBV" (bi)
 "IM2L0:XTES:CIL:CLK:REMAINING" (ao)
 "IM2L0:XTES:CIL:CLK:REMAINING_RBV" (ai)
 "IM2L0:XTES:CIL:CLK:TIMEOUT" (ao)
 "IM2L0:XTES:CIL:CLK:TIMEOUT_RBV" (ai)
 "IM2L0:XTES:CIL:PWR" (bo)
 "IM2L0:XTES:CIL:PWR_RBV" (bi)
 "IM2L0:XTES:CLF:LOCK" (bo)
 "IM2L0:XTES:CLF:LOCK_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bAllBackwardEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bAllEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bAllForwardEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bBrakeRelease_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bBusy_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bDone_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bEnable" (bo)
 "IM2L0:XTES:CLF:PLC:bEnableDone_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bError_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bExecute" (bo)
 "IM2L0:XTES:CLF:PLC:bExecute_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bGantryAxis_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bGantryForwardEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bHardwareEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bHome_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bLimitForwardEnable_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bPowerSelf_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:bReset" (bo)
 "IM2L0:XTES:CLF:PLC:bReset_RBV" (bi)
 "IM2L0:XTES:CLF:PLC:fAcceleration" (ao)
 "IM2L0:XTES:CLF:PLC:fAcceleration_RBV" (ai)
 "IM2L0:XTES:CLF:PLC:fDeceleration" (ao)
 "IM2L0:XTES:CLF:PLC:fDeceleration_RBV" (ai)
 "IM2L0:XTES:CLF:PLC:fHomePosition" (ao)
 "IM2L0:XTES:CLF:PLC:fHomePosition_RBV" (ai)
 "IM2L0:XTES:CLF:PLC:fPosition" (ao)
 "IM2L0:XTES:CLF:PLC:fPosition_RBV" (ai)
 "IM2L0:XTES:CLF:PLC:fVelocity" (ao)
 "IM2L0:XTES:CLF:PLC:fVelocity_RBV" (ai)
 "IM2L0:XTES:CLF:PLC:nBrakeMode_RBV" (mbbi)
 "IM2L0:XTES:CLF:PLC:nCmdData" (longout)
 "IM2L0:XTES:CLF:PLC:nCmdData_RBV" (longin)
 "IM2L0:XTES:CLF:PLC:nCommand" (longout)
 "IM2L0:XTES:CLF:PLC:nCommand_RBV" (longin)
 "IM2L0:XTES:CLF:PLC:nEnableMode_RBV" (mbbi)
 "IM2L0:XTES:CLF:PLC:nErrorId_RBV" (longin)
 "IM2L0:XTES:CLF:PLC:nHomingMode_RBV" (mbbi)
 "IM2L0:XTES:CLF:PLC:nMotionAxisID_RBV" (longin)
 "IM2L0:XTES:CLF:PLC:sErrorMessage_RBV" (waveform)
 "IM2L0:XTES:CLZ:LOCK" (bo)
 "IM2L0:XTES:CLZ:LOCK_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bAllEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bAllForwardEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bBrakeRelease_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bBusy_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bDone_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bEnable" (bo)
 "IM2L0:XTES:CLZ:PLC:bEnableDone_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bError_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bExecute" (bo)
 "IM2L0:XTES:CLZ:PLC:bExecute_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bGantryAxis_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bHardwareEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bHome_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bPowerSelf_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:bReset" (bo)
 "IM2L0:XTES:CLZ:PLC:bReset_RBV" (bi)
 "IM2L0:XTES:CLZ:PLC:fAcceleration" (ao)
 "IM2L0:XTES:CLZ:PLC:fAcceleration_RBV" (ai)
 "IM2L0:XTES:CLZ:PLC:fDeceleration" (ao)
 "IM2L0:XTES:CLZ:PLC:fDeceleration_RBV" (ai)
 "IM2L0:XTES:CLZ:PLC:fHomePosition" (ao)
 "IM2L0:XTES:CLZ:PLC:fHomePosition_RBV" (ai)
 "IM2L0:XTES:CLZ:PLC:fPosition" (ao)
 "IM2L0:XTES:CLZ:PLC:fPosition_RBV" (ai)
 "IM2L0:XTES:CLZ:PLC:fVelocity" (ao)
 "IM2L0:XTES:CLZ:PLC:fVelocity_RBV" (ai)
 "IM2L0:XTES:CLZ:PLC:nBrakeMode_RBV" (mbbi)
 "IM2L0:XTES:CLZ:PLC:nCmdData" (longout)
 "IM2L0:XTES:CLZ:PLC:nCmdData_RBV" (longin)
 "IM2L0:XTES:CLZ:PLC:nCommand" (longout)
 "IM2L0:XTES:CLZ:PLC:nCommand_RBV" (longin)
 "IM2L0:XTES:CLZ:PLC:nEnableMode_RBV" (mbbi)
 "IM2L0:XTES:CLZ:PLC:nErrorId_RBV" (longin)
 "IM2L0:XTES:CLZ:PLC:nHomingMode_RBV" (mbbi)
 "IM2L0:XTES:CLZ:PLC:nMotionAxisID_RBV" (longin)
 "IM2L0:XTES:CLZ:PLC:sErrorMessage_RBV" (waveform)
 "IM2L0:XTES:MFW:ERR:MSG_RBV" (waveform)
 "IM2L0:XTES:MFW:ERR:RESET" (bo)
 "IM2L0:XTES:MFW:ERR:RESET_RBV" (bi)
 "IM2L0:XTES:MFW:GET_RBV" (mbbi)
 "IM2L0:XTES:MFW:RAW:CMD_RBV" (waveform)
 "IM2L0:XTES:MFW:RAW:CMD" (waveform)
 "IM2L0:XTES:MFW:RAW:DONE_RBV" (bi)
 "IM2L0:XTES:MFW:RAW:ERR:RECV_RBV" (mbbi)
 "IM2L0:XTES:MFW:RAW:ERR:SEND_RBV" (mbbi)
 "IM2L0:XTES:MFW:RAW:ERR:SER_RBV" (mbbi)
 "IM2L0:XTES:MFW:RAW:RESP_RBV" (waveform)
 "IM2L0:XTES:MFW:RAW:SEND" (bo)
 "IM2L0:XTES:MFW:RAW:SEND_RBV" (bi)
 "IM2L0:XTES:MFW:SET" (mbbo)
 "IM2L0:XTES:MFW:SET_RBV" (mbbi)
 "IM2L0:XTES:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bAllEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bBusy_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bDone_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bEnable" (bo)
 "IM2L0:XTES:MMS:PLC:bEnableDone_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bError_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bExecute" (bo)
 "IM2L0:XTES:MMS:PLC:bExecute_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bHome_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:bReset" (bo)
 "IM2L0:XTES:MMS:PLC:bReset_RBV" (bi)
 "IM2L0:XTES:MMS:PLC:fAcceleration" (ao)
 "IM2L0:XTES:MMS:PLC:fAcceleration_RBV" (ai)
 "IM2L0:XTES:MMS:PLC:fDeceleration" (ao)
 "IM2L0:XTES:MMS:PLC:fDeceleration_RBV" (ai)
 "IM2L0:XTES:MMS:PLC:fHomePosition" (ao)
 "IM2L0:XTES:MMS:PLC:fHomePosition_RBV" (ai)
 "IM2L0:XTES:MMS:PLC:fPosition" (ao)
 "IM2L0:XTES:MMS:PLC:fPosition_RBV" (ai)
 "IM2L0:XTES:MMS:PLC:fVelocity" (ao)
 "IM2L0:XTES:MMS:PLC:fVelocity_RBV" (ai)
 "IM2L0:XTES:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM2L0:XTES:MMS:PLC:nCmdData" (longout)
 "IM2L0:XTES:MMS:PLC:nCmdData_RBV" (longin)
 "IM2L0:XTES:MMS:PLC:nCommand" (longout)
 "IM2L0:XTES:MMS:PLC:nCommand_RBV" (longin)
 "IM2L0:XTES:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM2L0:XTES:MMS:PLC:nErrorId_RBV" (longin)
 "IM2L0:XTES:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM2L0:XTES:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM2L0:XTES:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:01:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:01:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:01:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:01:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:01:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:01:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:01:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:01:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:01:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:01:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:01:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:02:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:02:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:02:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:02:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:02:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:02:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:02:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:02:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:02:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:02:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:02:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:03:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:03:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:03:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:03:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:03:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:03:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:03:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:03:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:03:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:03:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:03:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:04:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:04:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:04:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:04:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:04:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:04:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:04:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:04:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:04:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:04:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:04:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:05:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:05:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:05:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:05:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:05:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:05:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:05:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:05:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:05:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:05:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:05:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:06:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:06:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:06:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:06:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:06:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:06:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:06:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:06:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:06:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:06:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:06:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:07:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:07:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:07:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:07:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:07:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:07:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:07:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:07:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:07:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:07:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:07:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:08:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:08:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:08:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:08:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:08:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:08:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:08:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:08:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:08:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:08:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:08:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:09:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:09:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:09:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:09:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:09:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:09:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:09:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:09:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:09:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:09:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:09:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:10:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:10:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:10:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:10:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:10:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:10:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:10:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:10:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:10:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:10:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:10:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:11:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:11:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:11:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:11:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:11:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:11:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:11:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:11:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:11:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:11:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:11:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:12:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:12:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:12:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:12:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:12:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:12:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:12:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:12:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:12:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:12:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:12:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:13:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:13:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:13:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:13:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:13:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:13:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:13:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:13:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:13:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:13:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:13:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:14:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:14:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:14:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:14:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:14:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:14:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:14:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:14:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:14:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:14:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:14:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:15:ACCL" (ao)
 "IM2L0:XTES:MMS:STATE:15:ACCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:15:DCCL" (ao)
 "IM2L0:XTES:MMS:STATE:15:DCCL_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:15:DELTA" (ao)
 "IM2L0:XTES:MMS:STATE:15:DELTA_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:15:NAME_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:15:SETPOINT" (ao)
 "IM2L0:XTES:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:15:VALID_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:15:VELO" (ao)
 "IM2L0:XTES:MMS:STATE:15:VELO_RBV" (ai)
 "IM2L0:XTES:MMS:STATE:BUSY_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:DONE_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:ERRID_RBV" (longin)
 "IM2L0:XTES:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM2L0:XTES:MMS:STATE:ERR_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:GET_RBV" (mbbi)
 "IM2L0:XTES:MMS:STATE:RESET" (bo)
 "IM2L0:XTES:MMS:STATE:RESET_RBV" (bi)
 "IM2L0:XTES:MMS:STATE:SET" (mbbo)
 "IM2L0:XTES:MMS:STATE:SET_RBV" (mbbi)
 "IM2L0:XTES:SFW:FLOW" (bo)
 "IM2L0:XTES:SFW:FLOW_RBV" (bi)
 "IM3L0:PPM:CAM:CIL:PCT" (ao)
 "IM3L0:PPM:CAM:CIL:PCT_RBV" (ai)
 "IM3L0:PPM:CAM:PWR" (bo)
 "IM3L0:PPM:CAM:PWR_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bAllEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bBusy_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bDone_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bEnable" (bo)
 "IM3L0:PPM:MMS:PLC:bEnableDone_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bError_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bExecute" (bo)
 "IM3L0:PPM:MMS:PLC:bExecute_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bHome_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:bReset" (bo)
 "IM3L0:PPM:MMS:PLC:bReset_RBV" (bi)
 "IM3L0:PPM:MMS:PLC:fAcceleration" (ao)
 "IM3L0:PPM:MMS:PLC:fAcceleration_RBV" (ai)
 "IM3L0:PPM:MMS:PLC:fDeceleration" (ao)
 "IM3L0:PPM:MMS:PLC:fDeceleration_RBV" (ai)
 "IM3L0:PPM:MMS:PLC:fHomePosition" (ao)
 "IM3L0:PPM:MMS:PLC:fHomePosition_RBV" (ai)
 "IM3L0:PPM:MMS:PLC:fPosition" (ao)
 "IM3L0:PPM:MMS:PLC:fPosition_RBV" (ai)
 "IM3L0:PPM:MMS:PLC:fVelocity" (ao)
 "IM3L0:PPM:MMS:PLC:fVelocity_RBV" (ai)
 "IM3L0:PPM:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM3L0:PPM:MMS:PLC:nCmdData" (longout)
 "IM3L0:PPM:MMS:PLC:nCmdData_RBV" (longin)
 "IM3L0:PPM:MMS:PLC:nCommand" (longout)
 "IM3L0:PPM:MMS:PLC:nCommand_RBV" (longin)
 "IM3L0:PPM:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM3L0:PPM:MMS:PLC:nErrorId_RBV" (longin)
 "IM3L0:PPM:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM3L0:PPM:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM3L0:PPM:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:01:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:01:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:01:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:01:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:01:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:01:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:01:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:01:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:01:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:01:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:01:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:02:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:02:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:02:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:02:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:02:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:02:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:02:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:02:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:02:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:02:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:02:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:03:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:03:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:03:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:03:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:03:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:03:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:03:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:03:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:03:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:03:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:03:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:04:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:04:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:04:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:04:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:04:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:04:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:04:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:04:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:04:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:04:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:04:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:05:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:05:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:05:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:05:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:05:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:05:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:05:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:05:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:05:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:05:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:05:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:06:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:06:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:06:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:06:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:06:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:06:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:06:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:06:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:06:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:06:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:06:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:07:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:07:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:07:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:07:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:07:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:07:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:07:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:07:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:07:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:07:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:07:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:08:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:08:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:08:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:08:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:08:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:08:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:08:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:08:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:08:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:08:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:08:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:09:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:09:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:09:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:09:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:09:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:09:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:09:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:09:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:09:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:09:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:09:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:10:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:10:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:10:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:10:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:10:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:10:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:10:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:10:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:10:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:10:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:10:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:11:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:11:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:11:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:11:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:11:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:11:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:11:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:11:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:11:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:11:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:11:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:12:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:12:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:12:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:12:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:12:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:12:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:12:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:12:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:12:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:12:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:12:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:13:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:13:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:13:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:13:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:13:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:13:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:13:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:13:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:13:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:13:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:13:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:14:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:14:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:14:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:14:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:14:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:14:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:14:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:14:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:14:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:14:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:14:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:15:ACCL" (ao)
 "IM3L0:PPM:MMS:STATE:15:ACCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:15:DCCL" (ao)
 "IM3L0:PPM:MMS:STATE:15:DCCL_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:15:DELTA" (ao)
 "IM3L0:PPM:MMS:STATE:15:DELTA_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:15:NAME_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:15:SETPOINT" (ao)
 "IM3L0:PPM:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:15:VALID_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:15:VELO" (ao)
 "IM3L0:PPM:MMS:STATE:15:VELO_RBV" (ai)
 "IM3L0:PPM:MMS:STATE:BUSY_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:DONE_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:ERRID_RBV" (longin)
 "IM3L0:PPM:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM3L0:PPM:MMS:STATE:ERR_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:GET_RBV" (mbbi)
 "IM3L0:PPM:MMS:STATE:RESET" (bo)
 "IM3L0:PPM:MMS:STATE:RESET_RBV" (bi)
 "IM3L0:PPM:MMS:STATE:SET" (mbbo)
 "IM3L0:PPM:MMS:STATE:SET_RBV" (mbbi)
 "IM3L0:PPM:SFM:FLOW_RBV" (ai)
 "IM3L0:PPM:SFM:MA_RBV" (longin)
 "IM3L0:PPM:SPM:CALIB_BUFFER_RBV" (waveform)
 "IM3L0:PPM:SPM:CALIB:MJ_RATIO" (ao)
 "IM3L0:PPM:SPM:CALIB:MJ_RATIO_RBV" (ai)
 "IM3L0:PPM:SPM:CALIB:OFFSET" (ao)
 "IM3L0:PPM:SPM:CALIB:OFFSET_RBV" (ai)
 "IM3L0:PPM:SPM:CALIB:RATIO" (ao)
 "IM3L0:PPM:SPM:CALIB:RATIO_RBV" (ai)
 "IM3L0:PPM:SPM:CALIB_RBV" (ai)
 "IM3L0:PPM:SPM:MJ_BUFFER_RBV" (waveform)
 "IM3L0:PPM:SPM:MJ_RBV" (ai)
 "IM3L0:PPM:SPM:STC:CONN_RBV" (bi)
 "IM3L0:PPM:SPM:STC:ERR_RBV" (bi)
 "IM3L0:PPM:SPM:STC:TEMP_RBV" (ai)
 "IM3L0:PPM:SPM:VOLT_BUFFER_RBV" (waveform)
 "IM3L0:PPM:SPM:VOLT_RBV" (ai)
 "IM3L0:PPM:YAG:STC:CONN_RBV" (bi)
 "IM3L0:PPM:YAG:STC:ERR_RBV" (bi)
 "IM3L0:PPM:YAG:STC:TEMP_RBV" (ai)
 "IM4L0:XTES:CAM:PWR" (bo)
 "IM4L0:XTES:CAM:PWR_RBV" (bi)
 "IM4L0:XTES:CIL:AUTO" (bo)
 "IM4L0:XTES:CIL:AUTO_RBV" (bi)
 "IM4L0:XTES:CIL:CLK:REMAINING" (ao)
 "IM4L0:XTES:CIL:CLK:REMAINING_RBV" (ai)
 "IM4L0:XTES:CIL:CLK:TIMEOUT" (ao)
 "IM4L0:XTES:CIL:CLK:TIMEOUT_RBV" (ai)
 "IM4L0:XTES:CIL:PWR" (bo)
 "IM4L0:XTES:CIL:PWR_RBV" (bi)
 "IM4L0:XTES:CLF:LOCK" (bo)
 "IM4L0:XTES:CLF:LOCK_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bAllBackwardEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bAllEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bAllForwardEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bBrakeRelease_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bBusy_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bDone_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bEnable" (bo)
 "IM4L0:XTES:CLF:PLC:bEnableDone_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bError_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bExecute" (bo)
 "IM4L0:XTES:CLF:PLC:bExecute_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bGantryAxis_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bGantryForwardEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bHardwareEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bHome_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bLimitForwardEnable_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bPowerSelf_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:bReset" (bo)
 "IM4L0:XTES:CLF:PLC:bReset_RBV" (bi)
 "IM4L0:XTES:CLF:PLC:fAcceleration" (ao)
 "IM4L0:XTES:CLF:PLC:fAcceleration_RBV" (ai)
 "IM4L0:XTES:CLF:PLC:fDeceleration" (ao)
 "IM4L0:XTES:CLF:PLC:fDeceleration_RBV" (ai)
 "IM4L0:XTES:CLF:PLC:fHomePosition" (ao)
 "IM4L0:XTES:CLF:PLC:fHomePosition_RBV" (ai)
 "IM4L0:XTES:CLF:PLC:fPosition" (ao)
 "IM4L0:XTES:CLF:PLC:fPosition_RBV" (ai)
 "IM4L0:XTES:CLF:PLC:fVelocity" (ao)
 "IM4L0:XTES:CLF:PLC:fVelocity_RBV" (ai)
 "IM4L0:XTES:CLF:PLC:nBrakeMode_RBV" (mbbi)
 "IM4L0:XTES:CLF:PLC:nCmdData" (longout)
 "IM4L0:XTES:CLF:PLC:nCmdData_RBV" (longin)
 "IM4L0:XTES:CLF:PLC:nCommand" (longout)
 "IM4L0:XTES:CLF:PLC:nCommand_RBV" (longin)
 "IM4L0:XTES:CLF:PLC:nEnableMode_RBV" (mbbi)
 "IM4L0:XTES:CLF:PLC:nErrorId_RBV" (longin)
 "IM4L0:XTES:CLF:PLC:nHomingMode_RBV" (mbbi)
 "IM4L0:XTES:CLF:PLC:nMotionAxisID_RBV" (longin)
 "IM4L0:XTES:CLF:PLC:sErrorMessage_RBV" (waveform)
 "IM4L0:XTES:CLZ:LOCK" (bo)
 "IM4L0:XTES:CLZ:LOCK_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bAllEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bAllForwardEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bBrakeRelease_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bBusy_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bDone_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bEnable" (bo)
 "IM4L0:XTES:CLZ:PLC:bEnableDone_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bError_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bExecute" (bo)
 "IM4L0:XTES:CLZ:PLC:bExecute_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bGantryAxis_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bHardwareEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bHome_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bPowerSelf_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:bReset" (bo)
 "IM4L0:XTES:CLZ:PLC:bReset_RBV" (bi)
 "IM4L0:XTES:CLZ:PLC:fAcceleration" (ao)
 "IM4L0:XTES:CLZ:PLC:fAcceleration_RBV" (ai)
 "IM4L0:XTES:CLZ:PLC:fDeceleration" (ao)
 "IM4L0:XTES:CLZ:PLC:fDeceleration_RBV" (ai)
 "IM4L0:XTES:CLZ:PLC:fHomePosition" (ao)
 "IM4L0:XTES:CLZ:PLC:fHomePosition_RBV" (ai)
 "IM4L0:XTES:CLZ:PLC:fPosition" (ao)
 "IM4L0:XTES:CLZ:PLC:fPosition_RBV" (ai)
 "IM4L0:XTES:CLZ:PLC:fVelocity" (ao)
 "IM4L0:XTES:CLZ:PLC:fVelocity_RBV" (ai)
 "IM4L0:XTES:CLZ:PLC:nBrakeMode_RBV" (mbbi)
 "IM4L0:XTES:CLZ:PLC:nCmdData" (longout)
 "IM4L0:XTES:CLZ:PLC:nCmdData_RBV" (longin)
 "IM4L0:XTES:CLZ:PLC:nCommand" (longout)
 "IM4L0:XTES:CLZ:PLC:nCommand_RBV" (longin)
 "IM4L0:XTES:CLZ:PLC:nEnableMode_RBV" (mbbi)
 "IM4L0:XTES:CLZ:PLC:nErrorId_RBV" (longin)
 "IM4L0:XTES:CLZ:PLC:nHomingMode_RBV" (mbbi)
 "IM4L0:XTES:CLZ:PLC:nMotionAxisID_RBV" (longin)
 "IM4L0:XTES:CLZ:PLC:sErrorMessage_RBV" (waveform)
 "IM4L0:XTES:MFW:ERR:MSG_RBV" (waveform)
 "IM4L0:XTES:MFW:ERR:RESET" (bo)
 "IM4L0:XTES:MFW:ERR:RESET_RBV" (bi)
 "IM4L0:XTES:MFW:GET_RBV" (mbbi)
 "IM4L0:XTES:MFW:RAW:CMD_RBV" (waveform)
 "IM4L0:XTES:MFW:RAW:CMD" (waveform)
 "IM4L0:XTES:MFW:RAW:DONE_RBV" (bi)
 "IM4L0:XTES:MFW:RAW:ERR:RECV_RBV" (mbbi)
 "IM4L0:XTES:MFW:RAW:ERR:SEND_RBV" (mbbi)
 "IM4L0:XTES:MFW:RAW:ERR:SER_RBV" (mbbi)
 "IM4L0:XTES:MFW:RAW:RESP_RBV" (waveform)
 "IM4L0:XTES:MFW:RAW:SEND" (bo)
 "IM4L0:XTES:MFW:RAW:SEND_RBV" (bi)
 "IM4L0:XTES:MFW:SET" (mbbo)
 "IM4L0:XTES:MFW:SET_RBV" (mbbi)
 "IM4L0:XTES:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bAllEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bBusy_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bDone_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bEnable" (bo)
 "IM4L0:XTES:MMS:PLC:bEnableDone_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bError_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bExecute" (bo)
 "IM4L0:XTES:MMS:PLC:bExecute_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bHome_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:bReset" (bo)
 "IM4L0:XTES:MMS:PLC:bReset_RBV" (bi)
 "IM4L0:XTES:MMS:PLC:fAcceleration" (ao)
 "IM4L0:XTES:MMS:PLC:fAcceleration_RBV" (ai)
 "IM4L0:XTES:MMS:PLC:fDeceleration" (ao)
 "IM4L0:XTES:MMS:PLC:fDeceleration_RBV" (ai)
 "IM4L0:XTES:MMS:PLC:fHomePosition" (ao)
 "IM4L0:XTES:MMS:PLC:fHomePosition_RBV" (ai)
 "IM4L0:XTES:MMS:PLC:fPosition" (ao)
 "IM4L0:XTES:MMS:PLC:fPosition_RBV" (ai)
 "IM4L0:XTES:MMS:PLC:fVelocity" (ao)
 "IM4L0:XTES:MMS:PLC:fVelocity_RBV" (ai)
 "IM4L0:XTES:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM4L0:XTES:MMS:PLC:nCmdData" (longout)
 "IM4L0:XTES:MMS:PLC:nCmdData_RBV" (longin)
 "IM4L0:XTES:MMS:PLC:nCommand" (longout)
 "IM4L0:XTES:MMS:PLC:nCommand_RBV" (longin)
 "IM4L0:XTES:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM4L0:XTES:MMS:PLC:nErrorId_RBV" (longin)
 "IM4L0:XTES:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM4L0:XTES:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM4L0:XTES:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:01:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:01:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:01:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:01:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:01:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:01:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:01:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:01:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:01:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:01:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:01:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:02:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:02:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:02:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:02:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:02:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:02:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:02:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:02:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:02:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:02:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:02:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:03:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:03:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:03:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:03:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:03:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:03:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:03:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:03:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:03:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:03:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:03:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:04:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:04:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:04:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:04:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:04:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:04:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:04:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:04:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:04:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:04:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:04:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:05:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:05:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:05:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:05:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:05:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:05:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:05:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:05:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:05:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:05:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:05:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:06:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:06:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:06:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:06:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:06:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:06:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:06:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:06:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:06:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:06:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:06:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:07:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:07:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:07:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:07:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:07:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:07:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:07:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:07:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:07:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:07:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:07:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:08:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:08:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:08:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:08:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:08:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:08:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:08:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:08:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:08:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:08:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:08:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:09:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:09:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:09:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:09:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:09:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:09:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:09:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:09:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:09:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:09:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:09:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:10:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:10:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:10:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:10:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:10:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:10:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:10:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:10:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:10:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:10:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:10:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:11:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:11:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:11:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:11:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:11:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:11:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:11:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:11:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:11:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:11:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:11:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:12:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:12:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:12:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:12:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:12:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:12:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:12:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:12:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:12:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:12:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:12:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:13:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:13:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:13:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:13:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:13:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:13:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:13:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:13:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:13:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:13:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:13:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:14:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:14:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:14:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:14:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:14:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:14:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:14:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:14:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:14:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:14:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:14:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:15:ACCL" (ao)
 "IM4L0:XTES:MMS:STATE:15:ACCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:15:DCCL" (ao)
 "IM4L0:XTES:MMS:STATE:15:DCCL_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:15:DELTA" (ao)
 "IM4L0:XTES:MMS:STATE:15:DELTA_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:15:NAME_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:15:SETPOINT" (ao)
 "IM4L0:XTES:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:15:VALID_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:15:VELO" (ao)
 "IM4L0:XTES:MMS:STATE:15:VELO_RBV" (ai)
 "IM4L0:XTES:MMS:STATE:BUSY_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:DONE_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:ERRID_RBV" (longin)
 "IM4L0:XTES:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM4L0:XTES:MMS:STATE:ERR_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:GET_RBV" (mbbi)
 "IM4L0:XTES:MMS:STATE:RESET" (bo)
 "IM4L0:XTES:MMS:STATE:RESET_RBV" (bi)
 "IM4L0:XTES:MMS:STATE:SET" (mbbo)
 "IM4L0:XTES:MMS:STATE:SET_RBV" (mbbi)
 "IM4L0:XTES:SFW:FLOW" (bo)
 "IM4L0:XTES:SFW:FLOW_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bAllBackwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bAllEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bAllForwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bBrakeRelease_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bBusy_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bDone_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bEnable" (bo)
 "PF1L0:WFS:MMS:01:PLC:bEnableDone_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bError_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bExecute" (bo)
 "PF1L0:WFS:MMS:01:PLC:bExecute_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bGantryAxis_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bGantryBackwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bGantryForwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bHardwareEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bHome_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bLimitBackwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bLimitForwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bPowerSelf_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:bReset" (bo)
 "PF1L0:WFS:MMS:01:PLC:bReset_RBV" (bi)
 "PF1L0:WFS:MMS:01:PLC:fAcceleration" (ao)
 "PF1L0:WFS:MMS:01:PLC:fAcceleration_RBV" (ai)
 "PF1L0:WFS:MMS:01:PLC:fDeceleration" (ao)
 "PF1L0:WFS:MMS:01:PLC:fDeceleration_RBV" (ai)
 "PF1L0:WFS:MMS:01:PLC:fHomePosition" (ao)
 "PF1L0:WFS:MMS:01:PLC:fHomePosition_RBV" (ai)
 "PF1L0:WFS:MMS:01:PLC:fPosition" (ao)
 "PF1L0:WFS:MMS:01:PLC:fPosition_RBV" (ai)
 "PF1L0:WFS:MMS:01:PLC:fVelocity" (ao)
 "PF1L0:WFS:MMS:01:PLC:fVelocity_RBV" (ai)
 "PF1L0:WFS:MMS:01:PLC:nBrakeMode_RBV" (mbbi)
 "PF1L0:WFS:MMS:01:PLC:nCmdData" (longout)
 "PF1L0:WFS:MMS:01:PLC:nCmdData_RBV" (longin)
 "PF1L0:WFS:MMS:01:PLC:nCommand" (longout)
 "PF1L0:WFS:MMS:01:PLC:nCommand_RBV" (longin)
 "PF1L0:WFS:MMS:01:PLC:nEnableMode_RBV" (mbbi)
 "PF1L0:WFS:MMS:01:PLC:nErrorId_RBV" (longin)
 "PF1L0:WFS:MMS:01:PLC:nHomingMode_RBV" (mbbi)
 "PF1L0:WFS:MMS:01:PLC:nMotionAxisID_RBV" (longin)
 "PF1L0:WFS:MMS:01:PLC:sErrorMessage_RBV" (waveform)
 "PF1L0:WFS:MMS:02:PLC:bAllBackwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bAllEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bAllForwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bBrakeRelease_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bBusy_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bDone_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bEnable" (bo)
 "PF1L0:WFS:MMS:02:PLC:bEnableDone_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bError_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bExecute" (bo)
 "PF1L0:WFS:MMS:02:PLC:bExecute_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bGantryAxis_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bGantryBackwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bGantryForwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bHardwareEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bHome_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bLimitBackwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bLimitForwardEnable_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bPowerSelf_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:bReset" (bo)
 "PF1L0:WFS:MMS:02:PLC:bReset_RBV" (bi)
 "PF1L0:WFS:MMS:02:PLC:fAcceleration" (ao)
 "PF1L0:WFS:MMS:02:PLC:fAcceleration_RBV" (ai)
 "PF1L0:WFS:MMS:02:PLC:fDeceleration" (ao)
 "PF1L0:WFS:MMS:02:PLC:fDeceleration_RBV" (ai)
 "PF1L0:WFS:MMS:02:PLC:fHomePosition" (ao)
 "PF1L0:WFS:MMS:02:PLC:fHomePosition_RBV" (ai)
 "PF1L0:WFS:MMS:02:PLC:fPosition" (ao)
 "PF1L0:WFS:MMS:02:PLC:fPosition_RBV" (ai)
 "PF1L0:WFS:MMS:02:PLC:fVelocity" (ao)
 "PF1L0:WFS:MMS:02:PLC:fVelocity_RBV" (ai)
 "PF1L0:WFS:MMS:02:PLC:nBrakeMode_RBV" (mbbi)
 "PF1L0:WFS:MMS:02:PLC:nCmdData" (longout)
 "PF1L0:WFS:MMS:02:PLC:nCmdData_RBV" (longin)
 "PF1L0:WFS:MMS:02:PLC:nCommand" (longout)
 "PF1L0:WFS:MMS:02:PLC:nCommand_RBV" (longin)
 "PF1L0:WFS:MMS:02:PLC:nEnableMode_RBV" (mbbi)
 "PF1L0:WFS:MMS:02:PLC:nErrorId_RBV" (longin)
 "PF1L0:WFS:MMS:02:PLC:nHomingMode_RBV" (mbbi)
 "PF1L0:WFS:MMS:02:PLC:nMotionAxisID_RBV" (longin)
 "PF1L0:WFS:MMS:02:PLC:sErrorMessage_RBV" (waveform)
 "$(PREFIX)AccumulatedFastFaults_RBV" (longin)
 "$(PREFIX)CurrentBP:Attenuation_RBV" (ai)
 "$(PREFIX)CurrentBP:AuxAtt:001:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:001:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:002:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:002:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:003:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:003:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:004:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:004:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:005:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:005:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:006:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:006:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:007:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:007:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:008:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:008:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:009:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:009:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:010:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:010:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:011:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:011:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:012:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:012:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:013:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:013:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:014:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:014:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:015:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:015:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:AuxAtt:016:Att_RBV" (longin)
 "$(PREFIX)CurrentBP:AuxAtt:016:OK_RBV" (bi)
 "$(PREFIX)CurrentBP:Cohort_RBV" (longin)
 "$(PREFIX)CurrentBP:PhotonEnergyRanges_RBV" (longin)
 "$(PREFIX)CurrentBP:PulseEnergy_RBV" (ai)
 "$(PREFIX)CurrentBP:Rate_RBV" (longin)
 "$(PREFIX)CurrentBP:ST_RBV" (waveform)
 "$(PREFIX)CurrentBP:Valid_RBV" (bi)
 "$(PREFIX)eVRangeCnst_RBV" (waveform)
 "$(PREFIX)eVRangeCnst" (waveform)
 "$(PREFIX)FullBeamCnst:Attenuation_RBV" (ai)
 "$(PREFIX)FullBeamCnst:AuxAtt:001:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:001:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:002:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:002:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:003:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:003:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:004:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:004:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:005:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:005:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:006:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:006:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:007:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:007:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:008:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:008:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:009:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:009:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:010:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:010:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:011:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:011:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:012:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:012:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:013:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:013:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:014:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:014:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:015:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:015:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:AuxAtt:016:Att_RBV" (longin)
 "$(PREFIX)FullBeamCnst:AuxAtt:016:OK_RBV" (bi)
 "$(PREFIX)FullBeamCnst:Cohort_RBV" (longin)
 "$(PREFIX)FullBeamCnst:PhotonEnergyRanges_RBV" (longin)
 "$(PREFIX)FullBeamCnst:PulseEnergy_RBV" (ai)
 "$(PREFIX)FullBeamCnst:Rate_RBV" (longin)
 "$(PREFIX)FullBeamCnst:ST_RBV" (waveform)
 "$(PREFIX)FullBeamCnst:Valid_RBV" (bi)
 "$(PREFIX)LCLSGeneral:LogHost_RBV" (waveform)
 "$(PREFIX)LCLSGeneral:LogHost" (waveform)
 "$(PREFIX)LCLSGeneral:LogPort" (longout)
 "$(PREFIX)LCLSGeneral:LogPort_RBV" (longin)
 "$(PREFIX)RequestedBP:Attenuation_RBV" (ai)
 "$(PREFIX)RequestedBP:AuxAtt:001:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:001:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:002:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:002:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:003:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:003:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:004:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:004:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:005:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:005:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:006:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:006:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:007:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:007:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:008:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:008:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:009:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:009:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:010:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:010:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:011:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:011:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:012:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:012:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:013:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:013:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:014:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:014:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:015:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:015:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:AuxAtt:016:Att_RBV" (longin)
 "$(PREFIX)RequestedBP:AuxAtt:016:OK_RBV" (bi)
 "$(PREFIX)RequestedBP:Cohort_RBV" (longin)
 "$(PREFIX)RequestedBP:PhotonEnergyRanges_RBV" (longin)
 "$(PREFIX)RequestedBP:PulseEnergy_RBV" (ai)
 "$(PREFIX)RequestedBP:Rate_RBV" (longin)
 "$(PREFIX)RequestedBP:ST_RBV" (waveform)
 "$(PREFIX)RequestedBP:Valid_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:Attenuation_RBV" (ai)
 "$(PREFIX)SafeBeamCnst:AuxAtt:001:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:001:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:002:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:002:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:003:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:003:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:004:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:004:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:005:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:005:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:006:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:006:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:007:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:007:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:008:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:008:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:009:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:009:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:010:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:010:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:011:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:011:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:012:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:012:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:013:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:013:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:014:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:014:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:015:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:015:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:AuxAtt:016:Att_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:AuxAtt:016:OK_RBV" (bi)
 "$(PREFIX)SafeBeamCnst:Cohort_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:PhotonEnergyRanges_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:PulseEnergy_RBV" (ai)
 "$(PREFIX)SafeBeamCnst:Rate_RBV" (longin)
 "$(PREFIX)SafeBeamCnst:ST_RBV" (waveform)
 "$(PREFIX)SafeBeamCnst:Valid_RBV" (bi)
 "$(PREFIX)SuccessfulPreemptions_RBV" (longin)
 "RTDSL0:MPA:01:ERROR" (bo)
 "RTDSL0:MPA:01:ERROR_RBV" (bi)
 "RTDSL0:MPA:01:FF_Reset" (bo)
 "RTDSL0:MPA:01:FF_Reset_RBV" (bi)
 "RTDSL0:MPA:01:ILKOK_RBV" (bi)
 "RTDSL0:MPA:01:IN_CMD" (bo)
 "RTDSL0:MPA:01:IN_CMD_RBV" (bi)
 "RTDSL0:MPA:01:IN_RBV" (bi)
 "RTDSL0:MPA:01:INSERT_DO_RBV" (bi)
 "RTDSL0:MPA:01:INSERT_OK_RBV" (bi)
 "RTDSL0:MPA:01:MOT_DONE" (bo)
 "RTDSL0:MPA:01:MOT_DONE_RBV" (bi)
 "RTDSL0:MPA:01:MPS_FAULT" (bo)
 "RTDSL0:MPA:01:MPS_FAULT_RBV" (bi)
 "RTDSL0:MPA:01:OUT_CMD" (bo)
 "RTDSL0:MPA:01:OUT_CMD_RBV" (bi)
 "RTDSL0:MPA:01:OUT_RBV" (bi)
 "RTDSL0:MPA:01:POS_STATE_RBV" (mbbi)
 "RTDSL0:MPA:01:RETRACT_DO_RBV" (bi)
 "RTDSL0:MPA:01:RETRACT_OK_RBV" (bi)
 "RTDSL0:MPA:02:ERROR" (bo)
 "RTDSL0:MPA:02:ERROR_RBV" (bi)
 "RTDSL0:MPA:02:FF_Reset" (bo)
 "RTDSL0:MPA:02:FF_Reset_RBV" (bi)
 "RTDSL0:MPA:02:ILKOK_RBV" (bi)
 "RTDSL0:MPA:02:IN_CMD" (bo)
 "RTDSL0:MPA:02:IN_CMD_RBV" (bi)
 "RTDSL0:MPA:02:IN_RBV" (bi)
 "RTDSL0:MPA:02:INSERT_DO_RBV" (bi)
 "RTDSL0:MPA:02:INSERT_OK_RBV" (bi)
 "RTDSL0:MPA:02:MOT_DONE" (bo)
 "RTDSL0:MPA:02:MOT_DONE_RBV" (bi)
 "RTDSL0:MPA:02:MPS_FAULT" (bo)
 "RTDSL0:MPA:02:MPS_FAULT_RBV" (bi)
 "RTDSL0:MPA:02:OUT_CMD" (bo)
 "RTDSL0:MPA:02:OUT_CMD_RBV" (bi)
 "RTDSL0:MPA:02:OUT_RBV" (bi)
 "RTDSL0:MPA:02:POS_STATE_RBV" (mbbi)
 "RTDSL0:MPA:02:RETRACT_DO_RBV" (bi)
 "RTDSL0:MPA:02:RETRACT_OK_RBV" (bi)
 "RTDSL0:MPA:03:ERROR" (bo)
 "RTDSL0:MPA:03:ERROR_RBV" (bi)
 "RTDSL0:MPA:03:FF_Reset" (bo)
 "RTDSL0:MPA:03:FF_Reset_RBV" (bi)
 "RTDSL0:MPA:03:ILKOK_RBV" (bi)
 "RTDSL0:MPA:03:IN_CMD" (bo)
 "RTDSL0:MPA:03:IN_CMD_RBV" (bi)
 "RTDSL0:MPA:03:IN_RBV" (bi)
 "RTDSL0:MPA:03:INSERT_DO_RBV" (bi)
 "RTDSL0:MPA:03:INSERT_OK_RBV" (bi)
 "RTDSL0:MPA:03:MOT_DONE" (bo)
 "RTDSL0:MPA:03:MOT_DONE_RBV" (bi)
 "RTDSL0:MPA:03:MPS_FAULT" (bo)
 "RTDSL0:MPA:03:MPS_FAULT_RBV" (bi)
 "RTDSL0:MPA:03:OUT_CMD" (bo)
 "RTDSL0:MPA:03:OUT_CMD_RBV" (bi)
 "RTDSL0:MPA:03:OUT_RBV" (bi)
 "RTDSL0:MPA:03:POS_STATE_RBV" (mbbi)
 "RTDSL0:MPA:03:RETRACT_DO_RBV" (bi)
 "RTDSL0:MPA:03:RETRACT_OK_RBV" (bi)
 "RTDSL0:MPA:04:ERROR" (bo)
 "RTDSL0:MPA:04:ERROR_RBV" (bi)
 "RTDSL0:MPA:04:FF_Reset" (bo)
 "RTDSL0:MPA:04:FF_Reset_RBV" (bi)
 "RTDSL0:MPA:04:ILKOK_RBV" (bi)
 "RTDSL0:MPA:04:IN_CMD" (bo)
 "RTDSL0:MPA:04:IN_CMD_RBV" (bi)
 "RTDSL0:MPA:04:IN_RBV" (bi)
 "RTDSL0:MPA:04:INSERT_DO_RBV" (bi)
 "RTDSL0:MPA:04:INSERT_OK_RBV" (bi)
 "RTDSL0:MPA:04:MOT_DONE" (bo)
 "RTDSL0:MPA:04:MOT_DONE_RBV" (bi)
 "RTDSL0:MPA:04:MPS_FAULT" (bo)
 "RTDSL0:MPA:04:MPS_FAULT_RBV" (bi)
 "RTDSL0:MPA:04:OUT_CMD" (bo)
 "RTDSL0:MPA:04:OUT_CMD_RBV" (bi)
 "RTDSL0:MPA:04:OUT_RBV" (bi)
 "RTDSL0:MPA:04:POS_STATE_RBV" (mbbi)
 "RTDSL0:MPA:04:RETRACT_DO_RBV" (bi)
 "RTDSL0:MPA:04:RETRACT_OK_RBV" (bi)
 "SL1L0:POWER:ACTUAL_XCENTER" (ao)
 "SL1L0:POWER:ACTUAL_XCENTER_RBV" (ai)
 "SL1L0:POWER:ACTUAL_XWIDTH" (ao)
 "SL1L0:POWER:ACTUAL_XWIDTH_RBV" (ai)
 "SL1L0:POWER:ACTUAL_YCENTER" (ao)
 "SL1L0:POWER:ACTUAL_YCENTER_RBV" (ai)
 "SL1L0:POWER:ACTUAL_YWIDTH" (ao)
 "SL1L0:POWER:ACTUAL_YWIDTH_RBV" (ai)
 "SL1L0:POWER:BLOCK" (bo)
 "SL1L0:POWER:BLOCK_RBV" (bi)
 "SL1L0:POWER:BOTTOM:ACCL" (ao)
 "SL1L0:POWER:BOTTOM:ACCL_RBV" (ai)
 "SL1L0:POWER:BOTTOM:AT_STATE_RBV" (bi)
 "SL1L0:POWER:BOTTOM:BUSY_RBV" (bi)
 "SL1L0:POWER:BOTTOM:DCCL" (ao)
 "SL1L0:POWER:BOTTOM:DCCL_RBV" (ai)
 "SL1L0:POWER:BOTTOM:DELTA" (ao)
 "SL1L0:POWER:BOTTOM:DELTA_RBV" (ai)
 "SL1L0:POWER:BOTTOM:DMOV_RBV" (bi)
 "SL1L0:POWER:BOTTOM:ERRMSG_RBV" (waveform)
 "SL1L0:POWER:BOTTOM:ERR_RBV" (bi)
 "SL1L0:POWER:BOTTOM:GO" (bo)
 "SL1L0:POWER:BOTTOM:GO_RBV" (bi)
 "SL1L0:POWER:BOTTOM:LOCKED_RBV" (bi)
 "SL1L0:POWER:BOTTOM:MOVE_OK_RBV" (bi)
 "SL1L0:POWER:BOTTOM:NAME_RBV" (waveform)
 "SL1L0:POWER:BOTTOM:RTD:01:CONN_RBV" (bi)
 "SL1L0:POWER:BOTTOM:RTD:01:ERR_RBV" (bi)
 "SL1L0:POWER:BOTTOM:RTD:01:TEMP_RBV" (ai)
 "SL1L0:POWER:BOTTOM:RTD:02:CONN_RBV" (bi)
 "SL1L0:POWER:BOTTOM:RTD:02:ERR_RBV" (bi)
 "SL1L0:POWER:BOTTOM:RTD:02:TEMP_RBV" (ai)
 "SL1L0:POWER:BOTTOM:SETPOINT" (ao)
 "SL1L0:POWER:BOTTOM:SETPOINT_RBV" (ai)
 "SL1L0:POWER:BOTTOM:VALID_RBV" (bi)
 "SL1L0:POWER:BOTTOM:VELO" (ao)
 "SL1L0:POWER:BOTTOM:VELO_RBV" (ai)
 "SL1L0:POWER:CLOSE" (bo)
 "SL1L0:POWER:CLOSE_RBV" (bi)
 "SL1L0:POWER:FSW:FLOW" (bo)
 "SL1L0:POWER:FSW:FLOW_RBV" (bi)
 "SL1L0:POWER:GO" (bo)
 "SL1L0:POWER:GO_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bBusy_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bDone_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bEnable" (bo)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bError_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bExecute" (bo)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bExecute_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bHome_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bReset" (bo)
 "SL1L0:POWER:MMS:BOTTOM:PLC:bReset_RBV" (bi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fAcceleration" (ao)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV" (ai)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fDeceleration" (ao)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV" (ai)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition" (ao)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV" (ai)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fPosition" (ao)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fPosition_RBV" (ai)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fVelocity" (ao)
 "SL1L0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV" (ai)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nCmdData" (longout)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV" (longin)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nCommand" (longout)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nCommand_RBV" (longin)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV" (longin)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV" (longin)
 "SL1L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV" (waveform)
 "SL1L0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bAllEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bBusy_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bDone_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bEnable" (bo)
 "SL1L0:POWER:MMS:NORTH:PLC:bEnableDone_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bError_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bExecute" (bo)
 "SL1L0:POWER:MMS:NORTH:PLC:bExecute_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bHome_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:bReset" (bo)
 "SL1L0:POWER:MMS:NORTH:PLC:bReset_RBV" (bi)
 "SL1L0:POWER:MMS:NORTH:PLC:fAcceleration" (ao)
 "SL1L0:POWER:MMS:NORTH:PLC:fAcceleration_RBV" (ai)
 "SL1L0:POWER:MMS:NORTH:PLC:fDeceleration" (ao)
 "SL1L0:POWER:MMS:NORTH:PLC:fDeceleration_RBV" (ai)
 "SL1L0:POWER:MMS:NORTH:PLC:fHomePosition" (ao)
 "SL1L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV" (ai)
 "SL1L0:POWER:MMS:NORTH:PLC:fPosition" (ao)
 "SL1L0:POWER:MMS:NORTH:PLC:fPosition_RBV" (ai)
 "SL1L0:POWER:MMS:NORTH:PLC:fVelocity" (ao)
 "SL1L0:POWER:MMS:NORTH:PLC:fVelocity_RBV" (ai)
 "SL1L0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:NORTH:PLC:nCmdData" (longout)
 "SL1L0:POWER:MMS:NORTH:PLC:nCmdData_RBV" (longin)
 "SL1L0:POWER:MMS:NORTH:PLC:nCommand" (longout)
 "SL1L0:POWER:MMS:NORTH:PLC:nCommand_RBV" (longin)
 "SL1L0:POWER:MMS:NORTH:PLC:nEnableMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:NORTH:PLC:nErrorId_RBV" (longin)
 "SL1L0:POWER:MMS:NORTH:PLC:nHomingMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV" (longin)
 "SL1L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV" (waveform)
 "SL1L0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bBusy_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bDone_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bEnable" (bo)
 "SL1L0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bError_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bExecute" (bo)
 "SL1L0:POWER:MMS:SOUTH:PLC:bExecute_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bHome_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:bReset" (bo)
 "SL1L0:POWER:MMS:SOUTH:PLC:bReset_RBV" (bi)
 "SL1L0:POWER:MMS:SOUTH:PLC:fAcceleration" (ao)
 "SL1L0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV" (ai)
 "SL1L0:POWER:MMS:SOUTH:PLC:fDeceleration" (ao)
 "SL1L0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV" (ai)
 "SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition" (ao)
 "SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV" (ai)
 "SL1L0:POWER:MMS:SOUTH:PLC:fPosition" (ao)
 "SL1L0:POWER:MMS:SOUTH:PLC:fPosition_RBV" (ai)
 "SL1L0:POWER:MMS:SOUTH:PLC:fVelocity" (ao)
 "SL1L0:POWER:MMS:SOUTH:PLC:fVelocity_RBV" (ai)
 "SL1L0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:SOUTH:PLC:nCmdData" (longout)
 "SL1L0:POWER:MMS:SOUTH:PLC:nCmdData_RBV" (longin)
 "SL1L0:POWER:MMS:SOUTH:PLC:nCommand" (longout)
 "SL1L0:POWER:MMS:SOUTH:PLC:nCommand_RBV" (longin)
 "SL1L0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV" (longin)
 "SL1L0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV" (longin)
 "SL1L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV" (waveform)
 "SL1L0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bAllEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bBusy_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bDone_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bEnable" (bo)
 "SL1L0:POWER:MMS:TOP:PLC:bEnableDone_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bError_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bExecute" (bo)
 "SL1L0:POWER:MMS:TOP:PLC:bExecute_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bGantryAxis_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bHome_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bPowerSelf_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:bReset" (bo)
 "SL1L0:POWER:MMS:TOP:PLC:bReset_RBV" (bi)
 "SL1L0:POWER:MMS:TOP:PLC:fAcceleration" (ao)
 "SL1L0:POWER:MMS:TOP:PLC:fAcceleration_RBV" (ai)
 "SL1L0:POWER:MMS:TOP:PLC:fDeceleration" (ao)
 "SL1L0:POWER:MMS:TOP:PLC:fDeceleration_RBV" (ai)
 "SL1L0:POWER:MMS:TOP:PLC:fHomePosition" (ao)
 "SL1L0:POWER:MMS:TOP:PLC:fHomePosition_RBV" (ai)
 "SL1L0:POWER:MMS:TOP:PLC:fPosition" (ao)
 "SL1L0:POWER:MMS:TOP:PLC:fPosition_RBV" (ai)
 "SL1L0:POWER:MMS:TOP:PLC:fVelocity" (ao)
 "SL1L0:POWER:MMS:TOP:PLC:fVelocity_RBV" (ai)
 "SL1L0:POWER:MMS:TOP:PLC:nBrakeMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:TOP:PLC:nCmdData" (longout)
 "SL1L0:POWER:MMS:TOP:PLC:nCmdData_RBV" (longin)
 "SL1L0:POWER:MMS:TOP:PLC:nCommand" (longout)
 "SL1L0:POWER:MMS:TOP:PLC:nCommand_RBV" (longin)
 "SL1L0:POWER:MMS:TOP:PLC:nEnableMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:TOP:PLC:nErrorId_RBV" (longin)
 "SL1L0:POWER:MMS:TOP:PLC:nHomingMode_RBV" (mbbi)
 "SL1L0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV" (longin)
 "SL1L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV" (waveform)
 "SL1L0:POWER:NORTH:ACCL" (ao)
 "SL1L0:POWER:NORTH:ACCL_RBV" (ai)
 "SL1L0:POWER:NORTH:AT_STATE_RBV" (bi)
 "SL1L0:POWER:NORTH:BUSY_RBV" (bi)
 "SL1L0:POWER:NORTH:DCCL" (ao)
 "SL1L0:POWER:NORTH:DCCL_RBV" (ai)
 "SL1L0:POWER:NORTH:DELTA" (ao)
 "SL1L0:POWER:NORTH:DELTA_RBV" (ai)
 "SL1L0:POWER:NORTH:DMOV_RBV" (bi)
 "SL1L0:POWER:NORTH:ERRMSG_RBV" (waveform)
 "SL1L0:POWER:NORTH:ERR_RBV" (bi)
 "SL1L0:POWER:NORTH:GO" (bo)
 "SL1L0:POWER:NORTH:GO_RBV" (bi)
 "SL1L0:POWER:NORTH:LOCKED_RBV" (bi)
 "SL1L0:POWER:NORTH:MOVE_OK_RBV" (bi)
 "SL1L0:POWER:NORTH:NAME_RBV" (waveform)
 "SL1L0:POWER:NORTH:RTD:01:CONN_RBV" (bi)
 "SL1L0:POWER:NORTH:RTD:01:ERR_RBV" (bi)
 "SL1L0:POWER:NORTH:RTD:01:TEMP_RBV" (ai)
 "SL1L0:POWER:NORTH:RTD:02:CONN_RBV" (bi)
 "SL1L0:POWER:NORTH:RTD:02:ERR_RBV" (bi)
 "SL1L0:POWER:NORTH:RTD:02:TEMP_RBV" (ai)
 "SL1L0:POWER:NORTH:SETPOINT" (ao)
 "SL1L0:POWER:NORTH:SETPOINT_RBV" (ai)
 "SL1L0:POWER:NORTH:VALID_RBV" (bi)
 "SL1L0:POWER:NORTH:VELO" (ao)
 "SL1L0:POWER:NORTH:VELO_RBV" (ai)
 "SL1L0:POWER:OPEN" (bo)
 "SL1L0:POWER:OPEN_RBV" (bi)
 "SL1L0:POWER:PMPS_OK_RBV" (bi)
 "SL1L0:POWER:SOUTH:ACCL" (ao)
 "SL1L0:POWER:SOUTH:ACCL_RBV" (ai)
 "SL1L0:POWER:SOUTH:AT_STATE_RBV" (bi)
 "SL1L0:POWER:SOUTH:BUSY_RBV" (bi)
 "SL1L0:POWER:SOUTH:DCCL" (ao)
 "SL1L0:POWER:SOUTH:DCCL_RBV" (ai)
 "SL1L0:POWER:SOUTH:DELTA" (ao)
 "SL1L0:POWER:SOUTH:DELTA_RBV" (ai)
 "SL1L0:POWER:SOUTH:DMOV_RBV" (bi)
 "SL1L0:POWER:SOUTH:ERRMSG_RBV" (waveform)
 "SL1L0:POWER:SOUTH:ERR_RBV" (bi)
 "SL1L0:POWER:SOUTH:GO" (bo)
 "SL1L0:POWER:SOUTH:GO_RBV" (bi)
 "SL1L0:POWER:SOUTH:LOCKED_RBV" (bi)
 "SL1L0:POWER:SOUTH:MOVE_OK_RBV" (bi)
 "SL1L0:POWER:SOUTH:NAME_RBV" (waveform)
 "SL1L0:POWER:SOUTH:RTD:01:CONN_RBV" (bi)
 "SL1L0:POWER:SOUTH:RTD:01:ERR_RBV" (bi)
 "SL1L0:POWER:SOUTH:RTD:01:TEMP_RBV" (ai)
 "SL1L0:POWER:SOUTH:RTD:02:CONN_RBV" (bi)
 "SL1L0:POWER:SOUTH:RTD:02:ERR_RBV" (bi)
 "SL1L0:POWER:SOUTH:RTD:02:TEMP_RBV" (ai)
 "SL1L0:POWER:SOUTH:SETPOINT" (ao)
 "SL1L0:POWER:SOUTH:SETPOINT_RBV" (ai)
 "SL1L0:POWER:SOUTH:VALID_RBV" (bi)
 "SL1L0:POWER:SOUTH:VELO" (ao)
 "SL1L0:POWER:SOUTH:VELO_RBV" (ai)
 "SL1L0:POWER:TOP:ACCL" (ao)
 "SL1L0:POWER:TOP:ACCL_RBV" (ai)
 "SL1L0:POWER:TOP:AT_STATE_RBV" (bi)
 "SL1L0:POWER:TOP:BUSY_RBV" (bi)
 "SL1L0:POWER:TOP:DCCL" (ao)
 "SL1L0:POWER:TOP:DCCL_RBV" (ai)
 "SL1L0:POWER:TOP:DELTA" (ao)
 "SL1L0:POWER:TOP:DELTA_RBV" (ai)
 "SL1L0:POWER:TOP:DMOV_RBV" (bi)
 "SL1L0:POWER:TOP:ERRMSG_RBV" (waveform)
 "SL1L0:POWER:TOP:ERR_RBV" (bi)
 "SL1L0:POWER:TOP:GO" (bo)
 "SL1L0:POWER:TOP:GO_RBV" (bi)
 "SL1L0:POWER:TOP:LOCKED_RBV" (bi)
 "SL1L0:POWER:TOP:MOVE_OK_RBV" (bi)
 "SL1L0:POWER:TOP:NAME_RBV" (waveform)
 "SL1L0:POWER:TOP:RTD:01:CONN_RBV" (bi)
 "SL1L0:POWER:TOP:RTD:01:ERR_RBV" (bi)
 "SL1L0:POWER:TOP:RTD:01:TEMP_RBV" (ai)
 "SL1L0:POWER:TOP:RTD:02:CONN_RBV" (bi)
 "SL1L0:POWER:TOP:RTD:02:ERR_RBV" (bi)
 "SL1L0:POWER:TOP:RTD:02:TEMP_RBV" (ai)
 "SL1L0:POWER:TOP:SETPOINT" (ao)
 "SL1L0:POWER:TOP:SETPOINT_RBV" (ai)
 "SL1L0:POWER:TOP:VALID_RBV" (bi)
 "SL1L0:POWER:TOP:VELO" (ao)
 "SL1L0:POWER:TOP:VELO_RBV" (ai)
 "SL1L0:POWER:XCEN_REQ" (ao)
 "SL1L0:POWER:XCEN_REQ_RBV" (ai)
 "SL1L0:POWER:XCEN_SETZERO" (bo)
 "SL1L0:POWER:XCEN_SETZERO_RBV" (bi)
 "SL1L0:POWER:XWID_REQ" (ao)
 "SL1L0:POWER:XWID_REQ_RBV" (ai)
 "SL1L0:POWER:YCEN_REQ" (ao)
 "SL1L0:POWER:YCEN_REQ_RBV" (ai)
 "SL1L0:POWER:YCEN_SETZERO" (bo)
 "SL1L0:POWER:YCEN_SETZERO_RBV" (bi)
 "SL1L0:POWER:YWID_REQ" (ao)
 "SL1L0:POWER:YWID_REQ_RBV" (ai)
 "SL2L0:POWER:ACTUAL_XCENTER" (ao)
 "SL2L0:POWER:ACTUAL_XCENTER_RBV" (ai)
 "SL2L0:POWER:ACTUAL_XWIDTH" (ao)
 "SL2L0:POWER:ACTUAL_XWIDTH_RBV" (ai)
 "SL2L0:POWER:ACTUAL_YCENTER" (ao)
 "SL2L0:POWER:ACTUAL_YCENTER_RBV" (ai)
 "SL2L0:POWER:ACTUAL_YWIDTH" (ao)
 "SL2L0:POWER:ACTUAL_YWIDTH_RBV" (ai)
 "SL2L0:POWER:BLOCK" (bo)
 "SL2L0:POWER:BLOCK_RBV" (bi)
 "SL2L0:POWER:BOTTOM:ACCL" (ao)
 "SL2L0:POWER:BOTTOM:ACCL_RBV" (ai)
 "SL2L0:POWER:BOTTOM:AT_STATE_RBV" (bi)
 "SL2L0:POWER:BOTTOM:BUSY_RBV" (bi)
 "SL2L0:POWER:BOTTOM:DCCL" (ao)
 "SL2L0:POWER:BOTTOM:DCCL_RBV" (ai)
 "SL2L0:POWER:BOTTOM:DELTA" (ao)
 "SL2L0:POWER:BOTTOM:DELTA_RBV" (ai)
 "SL2L0:POWER:BOTTOM:DMOV_RBV" (bi)
 "SL2L0:POWER:BOTTOM:ERRMSG_RBV" (waveform)
 "SL2L0:POWER:BOTTOM:ERR_RBV" (bi)
 "SL2L0:POWER:BOTTOM:GO" (bo)
 "SL2L0:POWER:BOTTOM:GO_RBV" (bi)
 "SL2L0:POWER:BOTTOM:LOCKED_RBV" (bi)
 "SL2L0:POWER:BOTTOM:MOVE_OK_RBV" (bi)
 "SL2L0:POWER:BOTTOM:NAME_RBV" (waveform)
 "SL2L0:POWER:BOTTOM:RTD:01:CONN_RBV" (bi)
 "SL2L0:POWER:BOTTOM:RTD:01:ERR_RBV" (bi)
 "SL2L0:POWER:BOTTOM:RTD:01:TEMP_RBV" (ai)
 "SL2L0:POWER:BOTTOM:RTD:02:CONN_RBV" (bi)
 "SL2L0:POWER:BOTTOM:RTD:02:ERR_RBV" (bi)
 "SL2L0:POWER:BOTTOM:RTD:02:TEMP_RBV" (ai)
 "SL2L0:POWER:BOTTOM:SETPOINT" (ao)
 "SL2L0:POWER:BOTTOM:SETPOINT_RBV" (ai)
 "SL2L0:POWER:BOTTOM:VALID_RBV" (bi)
 "SL2L0:POWER:BOTTOM:VELO" (ao)
 "SL2L0:POWER:BOTTOM:VELO_RBV" (ai)
 "SL2L0:POWER:CLOSE" (bo)
 "SL2L0:POWER:CLOSE_RBV" (bi)
 "SL2L0:POWER:FSW:FLOW" (bo)
 "SL2L0:POWER:FSW:FLOW_RBV" (bi)
 "SL2L0:POWER:GO" (bo)
 "SL2L0:POWER:GO_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bBusy_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bDone_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bEnable" (bo)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bError_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bExecute" (bo)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bExecute_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bHome_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bReset" (bo)
 "SL2L0:POWER:MMS:BOTTOM:PLC:bReset_RBV" (bi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fAcceleration" (ao)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV" (ai)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fDeceleration" (ao)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV" (ai)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition" (ao)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV" (ai)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fPosition" (ao)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fPosition_RBV" (ai)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fVelocity" (ao)
 "SL2L0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV" (ai)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nCmdData" (longout)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV" (longin)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nCommand" (longout)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nCommand_RBV" (longin)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV" (longin)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV" (longin)
 "SL2L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV" (waveform)
 "SL2L0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bAllEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bBusy_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bDone_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bEnable" (bo)
 "SL2L0:POWER:MMS:NORTH:PLC:bEnableDone_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bError_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bExecute" (bo)
 "SL2L0:POWER:MMS:NORTH:PLC:bExecute_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bHome_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:bReset" (bo)
 "SL2L0:POWER:MMS:NORTH:PLC:bReset_RBV" (bi)
 "SL2L0:POWER:MMS:NORTH:PLC:fAcceleration" (ao)
 "SL2L0:POWER:MMS:NORTH:PLC:fAcceleration_RBV" (ai)
 "SL2L0:POWER:MMS:NORTH:PLC:fDeceleration" (ao)
 "SL2L0:POWER:MMS:NORTH:PLC:fDeceleration_RBV" (ai)
 "SL2L0:POWER:MMS:NORTH:PLC:fHomePosition" (ao)
 "SL2L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV" (ai)
 "SL2L0:POWER:MMS:NORTH:PLC:fPosition" (ao)
 "SL2L0:POWER:MMS:NORTH:PLC:fPosition_RBV" (ai)
 "SL2L0:POWER:MMS:NORTH:PLC:fVelocity" (ao)
 "SL2L0:POWER:MMS:NORTH:PLC:fVelocity_RBV" (ai)
 "SL2L0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:NORTH:PLC:nCmdData" (longout)
 "SL2L0:POWER:MMS:NORTH:PLC:nCmdData_RBV" (longin)
 "SL2L0:POWER:MMS:NORTH:PLC:nCommand" (longout)
 "SL2L0:POWER:MMS:NORTH:PLC:nCommand_RBV" (longin)
 "SL2L0:POWER:MMS:NORTH:PLC:nEnableMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:NORTH:PLC:nErrorId_RBV" (longin)
 "SL2L0:POWER:MMS:NORTH:PLC:nHomingMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV" (longin)
 "SL2L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV" (waveform)
 "SL2L0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bBusy_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bDone_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bEnable" (bo)
 "SL2L0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bError_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bExecute" (bo)
 "SL2L0:POWER:MMS:SOUTH:PLC:bExecute_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bHome_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:bReset" (bo)
 "SL2L0:POWER:MMS:SOUTH:PLC:bReset_RBV" (bi)
 "SL2L0:POWER:MMS:SOUTH:PLC:fAcceleration" (ao)
 "SL2L0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV" (ai)
 "SL2L0:POWER:MMS:SOUTH:PLC:fDeceleration" (ao)
 "SL2L0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV" (ai)
 "SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition" (ao)
 "SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV" (ai)
 "SL2L0:POWER:MMS:SOUTH:PLC:fPosition" (ao)
 "SL2L0:POWER:MMS:SOUTH:PLC:fPosition_RBV" (ai)
 "SL2L0:POWER:MMS:SOUTH:PLC:fVelocity" (ao)
 "SL2L0:POWER:MMS:SOUTH:PLC:fVelocity_RBV" (ai)
 "SL2L0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:SOUTH:PLC:nCmdData" (longout)
 "SL2L0:POWER:MMS:SOUTH:PLC:nCmdData_RBV" (longin)
 "SL2L0:POWER:MMS:SOUTH:PLC:nCommand" (longout)
 "SL2L0:POWER:MMS:SOUTH:PLC:nCommand_RBV" (longin)
 "SL2L0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV" (longin)
 "SL2L0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV" (longin)
 "SL2L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV" (waveform)
 "SL2L0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bAllEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bBusy_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bDone_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bEnable" (bo)
 "SL2L0:POWER:MMS:TOP:PLC:bEnableDone_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bError_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bExecute" (bo)
 "SL2L0:POWER:MMS:TOP:PLC:bExecute_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bGantryAxis_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bHome_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bPowerSelf_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:bReset" (bo)
 "SL2L0:POWER:MMS:TOP:PLC:bReset_RBV" (bi)
 "SL2L0:POWER:MMS:TOP:PLC:fAcceleration" (ao)
 "SL2L0:POWER:MMS:TOP:PLC:fAcceleration_RBV" (ai)
 "SL2L0:POWER:MMS:TOP:PLC:fDeceleration" (ao)
 "SL2L0:POWER:MMS:TOP:PLC:fDeceleration_RBV" (ai)
 "SL2L0:POWER:MMS:TOP:PLC:fHomePosition" (ao)
 "SL2L0:POWER:MMS:TOP:PLC:fHomePosition_RBV" (ai)
 "SL2L0:POWER:MMS:TOP:PLC:fPosition" (ao)
 "SL2L0:POWER:MMS:TOP:PLC:fPosition_RBV" (ai)
 "SL2L0:POWER:MMS:TOP:PLC:fVelocity" (ao)
 "SL2L0:POWER:MMS:TOP:PLC:fVelocity_RBV" (ai)
 "SL2L0:POWER:MMS:TOP:PLC:nBrakeMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:TOP:PLC:nCmdData" (longout)
 "SL2L0:POWER:MMS:TOP:PLC:nCmdData_RBV" (longin)
 "SL2L0:POWER:MMS:TOP:PLC:nCommand" (longout)
 "SL2L0:POWER:MMS:TOP:PLC:nCommand_RBV" (longin)
 "SL2L0:POWER:MMS:TOP:PLC:nEnableMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:TOP:PLC:nErrorId_RBV" (longin)
 "SL2L0:POWER:MMS:TOP:PLC:nHomingMode_RBV" (mbbi)
 "SL2L0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV" (longin)
 "SL2L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV" (waveform)
 "SL2L0:POWER:NORTH:ACCL" (ao)
 "SL2L0:POWER:NORTH:ACCL_RBV" (ai)
 "SL2L0:POWER:NORTH:AT_STATE_RBV" (bi)
 "SL2L0:POWER:NORTH:BUSY_RBV" (bi)
 "SL2L0:POWER:NORTH:DCCL" (ao)
 "SL2L0:POWER:NORTH:DCCL_RBV" (ai)
 "SL2L0:POWER:NORTH:DELTA" (ao)
 "SL2L0:POWER:NORTH:DELTA_RBV" (ai)
 "SL2L0:POWER:NORTH:DMOV_RBV" (bi)
 "SL2L0:POWER:NORTH:ERRMSG_RBV" (waveform)
 "SL2L0:POWER:NORTH:ERR_RBV" (bi)
 "SL2L0:POWER:NORTH:GO" (bo)
 "SL2L0:POWER:NORTH:GO_RBV" (bi)
 "SL2L0:POWER:NORTH:LOCKED_RBV" (bi)
 "SL2L0:POWER:NORTH:MOVE_OK_RBV" (bi)
 "SL2L0:POWER:NORTH:NAME_RBV" (waveform)
 "SL2L0:POWER:NORTH:RTD:01:CONN_RBV" (bi)
 "SL2L0:POWER:NORTH:RTD:01:ERR_RBV" (bi)
 "SL2L0:POWER:NORTH:RTD:01:TEMP_RBV" (ai)
 "SL2L0:POWER:NORTH:RTD:02:CONN_RBV" (bi)
 "SL2L0:POWER:NORTH:RTD:02:ERR_RBV" (bi)
 "SL2L0:POWER:NORTH:RTD:02:TEMP_RBV" (ai)
 "SL2L0:POWER:NORTH:SETPOINT" (ao)
 "SL2L0:POWER:NORTH:SETPOINT_RBV" (ai)
 "SL2L0:POWER:NORTH:VALID_RBV" (bi)
 "SL2L0:POWER:NORTH:VELO" (ao)
 "SL2L0:POWER:NORTH:VELO_RBV" (ai)
 "SL2L0:POWER:OPEN" (bo)
 "SL2L0:POWER:OPEN_RBV" (bi)
 "SL2L0:POWER:PMPS_OK_RBV" (bi)
 "SL2L0:POWER:SOUTH:ACCL" (ao)
 "SL2L0:POWER:SOUTH:ACCL_RBV" (ai)
 "SL2L0:POWER:SOUTH:AT_STATE_RBV" (bi)
 "SL2L0:POWER:SOUTH:BUSY_RBV" (bi)
 "SL2L0:POWER:SOUTH:DCCL" (ao)
 "SL2L0:POWER:SOUTH:DCCL_RBV" (ai)
 "SL2L0:POWER:SOUTH:DELTA" (ao)
 "SL2L0:POWER:SOUTH:DELTA_RBV" (ai)
 "SL2L0:POWER:SOUTH:DMOV_RBV" (bi)
 "SL2L0:POWER:SOUTH:ERRMSG_RBV" (waveform)
 "SL2L0:POWER:SOUTH:ERR_RBV" (bi)
 "SL2L0:POWER:SOUTH:GO" (bo)
 "SL2L0:POWER:SOUTH:GO_RBV" (bi)
 "SL2L0:POWER:SOUTH:LOCKED_RBV" (bi)
 "SL2L0:POWER:SOUTH:MOVE_OK_RBV" (bi)
 "SL2L0:POWER:SOUTH:NAME_RBV" (waveform)
 "SL2L0:POWER:SOUTH:RTD:01:CONN_RBV" (bi)
 "SL2L0:POWER:SOUTH:RTD:01:ERR_RBV" (bi)
 "SL2L0:POWER:SOUTH:RTD:01:TEMP_RBV" (ai)
 "SL2L0:POWER:SOUTH:RTD:02:CONN_RBV" (bi)
 "SL2L0:POWER:SOUTH:RTD:02:ERR_RBV" (bi)
 "SL2L0:POWER:SOUTH:RTD:02:TEMP_RBV" (ai)
 "SL2L0:POWER:SOUTH:SETPOINT" (ao)
 "SL2L0:POWER:SOUTH:SETPOINT_RBV" (ai)
 "SL2L0:POWER:SOUTH:VALID_RBV" (bi)
 "SL2L0:POWER:SOUTH:VELO" (ao)
 "SL2L0:POWER:SOUTH:VELO_RBV" (ai)
 "SL2L0:POWER:TOP:ACCL" (ao)
 "SL2L0:POWER:TOP:ACCL_RBV" (ai)
 "SL2L0:POWER:TOP:AT_STATE_RBV" (bi)
 "SL2L0:POWER:TOP:BUSY_RBV" (bi)
 "SL2L0:POWER:TOP:DCCL" (ao)
 "SL2L0:POWER:TOP:DCCL_RBV" (ai)
 "SL2L0:POWER:TOP:DELTA" (ao)
 "SL2L0:POWER:TOP:DELTA_RBV" (ai)
 "SL2L0:POWER:TOP:DMOV_RBV" (bi)
 "SL2L0:POWER:TOP:ERRMSG_RBV" (waveform)
 "SL2L0:POWER:TOP:ERR_RBV" (bi)
 "SL2L0:POWER:TOP:GO" (bo)
 "SL2L0:POWER:TOP:GO_RBV" (bi)
 "SL2L0:POWER:TOP:LOCKED_RBV" (bi)
 "SL2L0:POWER:TOP:MOVE_OK_RBV" (bi)
 "SL2L0:POWER:TOP:NAME_RBV" (waveform)
 "SL2L0:POWER:TOP:RTD:01:CONN_RBV" (bi)
 "SL2L0:POWER:TOP:RTD:01:ERR_RBV" (bi)
 "SL2L0:POWER:TOP:RTD:01:TEMP_RBV" (ai)
 "SL2L0:POWER:TOP:RTD:02:CONN_RBV" (bi)
 "SL2L0:POWER:TOP:RTD:02:ERR_RBV" (bi)
 "SL2L0:POWER:TOP:RTD:02:TEMP_RBV" (ai)
 "SL2L0:POWER:TOP:SETPOINT" (ao)
 "SL2L0:POWER:TOP:SETPOINT_RBV" (ai)
 "SL2L0:POWER:TOP:VALID_RBV" (bi)
 "SL2L0:POWER:TOP:VELO" (ao)
 "SL2L0:POWER:TOP:VELO_RBV" (ai)
 "SL2L0:POWER:XCEN_REQ" (ao)
 "SL2L0:POWER:XCEN_REQ_RBV" (ai)
 "SL2L0:POWER:XCEN_SETZERO" (bo)
 "SL2L0:POWER:XCEN_SETZERO_RBV" (bi)
 "SL2L0:POWER:XWID_REQ" (ao)
 "SL2L0:POWER:XWID_REQ_RBV" (ai)
 "SL2L0:POWER:YCEN_REQ" (ao)
 "SL2L0:POWER:YCEN_REQ_RBV" (ai)
 "SL2L0:POWER:YCEN_SETZERO" (bo)
 "SL2L0:POWER:YCEN_SETZERO_RBV" (bi)
 "SL2L0:POWER:YWID_REQ" (ao)
 "SL2L0:POWER:YWID_REQ_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bBrakeRelease_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bBusy_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bDone_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnable" (bo)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnableDone_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bError_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bExecute" (bo)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bExecute_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryAxis_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHardwareEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHome_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bLimitBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bLimitForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bPowerSelf_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset" (bo)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fAcceleration" (ao)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fAcceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fDeceleration" (ao)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fDeceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition" (ao)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosition" (ao)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosition_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fVelocity" (ao)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fVelocity_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nBrakeMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCmdData" (longout)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCmdData_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCommand" (longout)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCommand_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nEnableMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nErrorId_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nHomingMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nMotionAxisID_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:sErrorMessage_RBV" (waveform)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bBrakeRelease_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bBusy_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bDone_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnable" (bo)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnableDone_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bError_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bExecute" (bo)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bExecute_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryAxis_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHardwareEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHome_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bLimitBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bLimitForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bPowerSelf_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset" (bo)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset_RBV" (bi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fAcceleration" (ao)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fAcceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fDeceleration" (ao)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fDeceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition" (ao)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosition" (ao)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosition_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fVelocity" (ao)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fVelocity_RBV" (ai)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nBrakeMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCmdData" (longout)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCmdData_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCommand" (longout)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCommand_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nEnableMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nErrorId_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nHomingMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nMotionAxisID_RBV" (longin)
 "SP1L0:KMONO:MMS:DIODE_VERT:PLC:sErrorMessage_RBV" (waveform)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bBrakeRelease_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bBusy_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bDone_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnable" (bo)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnableDone_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bError_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bExecute" (bo)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bExecute_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryAxis_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHardwareEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHome_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bLimitBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bLimitForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bPowerSelf_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset" (bo)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fAcceleration" (ao)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fAcceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fDeceleration" (ao)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fDeceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition" (ao)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosition" (ao)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosition_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fVelocity" (ao)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fVelocity_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nBrakeMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCmdData" (longout)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCmdData_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCommand" (longout)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCommand_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nEnableMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nErrorId_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nHomingMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nMotionAxisID_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_HORIZ:PLC:sErrorMessage_RBV" (waveform)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bAllBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bAllEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bAllForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bBrakeRelease_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bBusy_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bDone_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bEnable" (bo)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bEnableDone_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bError_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bExecute" (bo)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bExecute_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryAxis_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bHardwareEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bHome_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bLimitBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bLimitForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bPowerSelf_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bReset" (bo)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:bReset_RBV" (bi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fAcceleration" (ao)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fAcceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fDeceleration" (ao)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fDeceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition" (ao)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fPosition" (ao)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fPosition_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fVelocity" (ao)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:fVelocity_RBV" (ai)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nBrakeMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nCmdData" (longout)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nCmdData_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nCommand" (longout)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nCommand_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nEnableMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nErrorId_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nHomingMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:nMotionAxisID_RBV" (longin)
 "SP1L0:KMONO:MMS:RET_VERT:PLC:sErrorMessage_RBV" (waveform)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bBrakeRelease_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bBusy_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bDone_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnable" (bo)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnableDone_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bError_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bExecute" (bo)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bExecute_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryAxis_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHardwareEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHome_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bLimitBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bLimitForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bPowerSelf_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset" (bo)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fAcceleration" (ao)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fAcceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fDeceleration" (ao)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fDeceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition" (ao)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosition" (ao)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosition_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fVelocity" (ao)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fVelocity_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nBrakeMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCmdData" (longout)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCmdData_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCommand" (longout)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCommand_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nEnableMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nErrorId_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nHomingMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nMotionAxisID_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:sErrorMessage_RBV" (waveform)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bBrakeRelease_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bBusy_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bDone_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnable" (bo)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnableDone_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bError_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bExecute" (bo)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bExecute_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryAxis_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHardwareEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHome_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bLimitBackwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bLimitForwardEnable_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bPowerSelf_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset" (bo)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset_RBV" (bi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fAcceleration" (ao)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fAcceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fDeceleration" (ao)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fDeceleration_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition" (ao)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosition" (ao)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosition_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fVelocity" (ao)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fVelocity_RBV" (ai)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nBrakeMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCmdData" (longout)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCmdData_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCommand" (longout)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCommand_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nEnableMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nErrorId_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nHomingMode_RBV" (mbbi)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nMotionAxisID_RBV" (longin)
 "SP1L0:KMONO:MMS:XTAL_VERT:PLC:sErrorMessage_RBV" (waveform)
```

EPICS database
--------------
```
record(longin, "$(PREFIX)LCLSGeneral:LogPort_RBV") {
  field(DESC, "The log host UDP port")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.iLogPort?")
  info(archive, "VAL")
}

record(longout, "$(PREFIX)LCLSGeneral:LogPort") {
  field(DESC, "The log host UDP port")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/GVL_Logger.iLogPort=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(waveform, "$(PREFIX)LCLSGeneral:LogHost_RBV") {
  field(DESC, "The log host IP address")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.cLogHost?")
  field(FTVL, "CHAR")
  field(NELM, "15")
  info(archive, "VAL")
}

record(waveform, "$(PREFIX)LCLSGeneral:LogHost") {
  field(DESC, "The log host IP address")
  field(DTYP, "asynInt8ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/GVL_Logger.cLogHost=")
  field(FTVL, "CHAR")
  field(NELM, "15")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "$(PREFIX)RequestedBP:Attenuation_RBV") {
  field(DESC, "PMPS_GVL.stRequestedBeamParameters.fAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.fAtt?")
  field(PREC, "3")
  field(EGU, "%")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:Rate_RBV") {
  field(DESC, "PMPS_GVL.stRequestedBeamParameters.nRate")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nRate?")
  field(EGU, "Hz")
  info(archive, "monitor 1: VAL")
}

record(ai, "$(PREFIX)RequestedBP:PulseEnergy_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.fPP_mJ
  field(DESC, "PMPS_GVL.stRequested...Parameters.fPP_mJ")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.fPP_mJ?")
  field(PREC, "3")
  field(EGU, "mJ")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:PhotonEnergyRanges_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.neVRange
  field(DESC, "PMPS_GVL.stRequested...rameters.neVRange")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.neVRange?")
  field(EGU, "eV")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:001:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[1].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[1].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[1].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:002:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[2].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[2].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[2].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:003:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[3].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[3].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[3].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:004:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[4].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[4].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[4].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:005:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[5].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[5].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[5].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:006:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[6].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[6].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[6].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:007:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[7].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[7].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[7].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:008:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[8].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[8].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[8].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:009:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[9].nAtt
  field(DESC, "PMPS_GVL.stRequested...tenuators[9].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[9].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:010:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[10].nAtt
  field(DESC, "PMPS_GVL.stRequested...enuators[10].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[10].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:011:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[11].nAtt
  field(DESC, "PMPS_GVL.stRequested...enuators[11].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[11].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:012:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[12].nAtt
  field(DESC, "PMPS_GVL.stRequested...enuators[12].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[12].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:013:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[13].nAtt
  field(DESC, "PMPS_GVL.stRequested...enuators[13].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[13].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:014:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[14].nAtt
  field(DESC, "PMPS_GVL.stRequested...enuators[14].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[14].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:015:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[15].nAtt
  field(DESC, "PMPS_GVL.stRequested...enuators[15].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[15].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:AuxAtt:016:Att_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[16].nAtt
  field(DESC, "PMPS_GVL.stRequested...enuators[16].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[16].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:001:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[1].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[1].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[1].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:002:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[2].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[2].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[2].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:003:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[3].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[3].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[3].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:004:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[4].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[4].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[4].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:005:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[5].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[5].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[5].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:006:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[6].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[6].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[6].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:007:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[7].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[7].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[7].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:008:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[8].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[8].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[8].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:009:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[9].xAttOK
  field(DESC, "PMPS_GVL.stRequested...nuators[9].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[9].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:010:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[10].xAttOK
  field(DESC, "PMPS_GVL.stRequested...uators[10].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[10].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:011:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[11].xAttOK
  field(DESC, "PMPS_GVL.stRequested...uators[11].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[11].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:012:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[12].xAttOK
  field(DESC, "PMPS_GVL.stRequested...uators[12].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[12].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:013:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[13].xAttOK
  field(DESC, "PMPS_GVL.stRequested...uators[13].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[13].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:014:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[14].xAttOK
  field(DESC, "PMPS_GVL.stRequested...uators[14].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[14].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:015:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[15].xAttOK
  field(DESC, "PMPS_GVL.stRequested...uators[15].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[15].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:AuxAtt:016:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astAttenuators[16].xAttOK
  field(DESC, "PMPS_GVL.stRequested...uators[16].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astAttenuators[16].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(waveform, "$(PREFIX)RequestedBP:ST_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.aStoppers
  field(DESC, "PMPS_GVL.stRequested...ameters.aStoppers")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.aStoppers?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)RequestedBP:Valid_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.xValid
  field(DESC, "PMPS_GVL.stRequested...Parameters.xValid")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)RequestedBP:Cohort_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.nCohortInt
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nCohortInt?")
  info(archive, "monitor 1: VAL")
}

record(ai, "$(PREFIX)CurrentBP:Attenuation_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.fAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.fAtt?")
  field(PREC, "3")
  field(EGU, "%")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:Rate_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.nRate")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nRate?")
  field(EGU, "Hz")
  info(archive, "monitor 1: VAL")
}

record(ai, "$(PREFIX)CurrentBP:PulseEnergy_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.fPP_mJ")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.fPP_mJ?")
  field(PREC, "3")
  field(EGU, "mJ")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:PhotonEnergyRanges_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.neVRange
  field(DESC, "PMPS_GVL.stCurrentBe...rameters.neVRange")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.neVRange?")
  field(EGU, "eV")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:001:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[1].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[1].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[1].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:002:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[2].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[2].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[2].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:003:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[3].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[3].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[3].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:004:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[4].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[4].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[4].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:005:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[5].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[5].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[5].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:006:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[6].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[6].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[6].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:007:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[7].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[7].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[7].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:008:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[8].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[8].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[8].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:009:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[9].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...tenuators[9].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[9].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:010:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[10].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...enuators[10].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[10].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:011:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[11].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...enuators[11].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[11].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:012:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[12].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...enuators[12].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[12].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:013:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[13].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...enuators[13].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[13].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:014:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[14].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...enuators[14].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[14].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:015:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[15].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...enuators[15].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[15].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:AuxAtt:016:Att_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[16].nAtt
  field(DESC, "PMPS_GVL.stCurrentBe...enuators[16].nAtt")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[16].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:001:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[1].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[1].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[1].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:002:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[2].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[2].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[2].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:003:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[3].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[3].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[3].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:004:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[4].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[4].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[4].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:005:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[5].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[5].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[5].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:006:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[6].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[6].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[6].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:007:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[7].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[7].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[7].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:008:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[8].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[8].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[8].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:009:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[9].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...nuators[9].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[9].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:010:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[10].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...uators[10].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[10].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:011:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[11].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...uators[11].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[11].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:012:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[12].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...uators[12].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[12].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:013:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[13].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...uators[13].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[13].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:014:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[14].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...uators[14].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[14].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:015:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[15].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...uators[15].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[15].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:AuxAtt:016:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astAttenuators[16].xAttOK
  field(DESC, "PMPS_GVL.stCurrentBe...uators[16].xAttOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astAttenuators[16].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(waveform, "$(PREFIX)CurrentBP:ST_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.aStoppers
  field(DESC, "PMPS_GVL.stCurrentBe...ameters.aStoppers")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.aStoppers?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)CurrentBP:Valid_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.xValid")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)CurrentBP:Cohort_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.nCohortInt
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nCohortInt?")
  info(archive, "monitor 1: VAL")
}

record(ai, "$(PREFIX)FullBeamCnst:Attenuation_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.fAtt?")
  field(PREC, "3")
  field(EGU, "%")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:Rate_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nRate?")
  field(EGU, "Hz")
  info(archive, "monitor 1: VAL")
}

record(ai, "$(PREFIX)FullBeamCnst:PulseEnergy_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.fPP_mJ?")
  field(PREC, "3")
  field(EGU, "mJ")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:PhotonEnergyRanges_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.neVRange?")
  field(EGU, "eV")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:001:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[1].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[1].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:002:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[2].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[2].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:003:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[3].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[3].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:004:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[4].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[4].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:005:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[5].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[5].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:006:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[6].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[6].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:007:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[7].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[7].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:008:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[8].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[8].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:009:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[9].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[9].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:010:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[10].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[10].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:011:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[11].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[11].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:012:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[12].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[12].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:013:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[13].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[13].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:014:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[14].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[14].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:015:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[15].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[15].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:AuxAtt:016:Att_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[16].nAtt
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[16].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:001:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[1].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[1].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:002:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[2].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[2].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:003:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[3].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[3].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:004:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[4].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[4].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:005:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[5].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[5].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:006:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[6].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[6].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:007:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[7].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[7].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:008:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[8].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[8].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:009:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[9].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[9].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:010:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[10].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[10].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:011:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[11].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[11].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:012:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[12].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[12].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:013:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[13].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[13].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:014:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[14].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[14].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:015:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[15].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[15].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:AuxAtt:016:OK_RBV") {
  # PMPS_GVL.cstFullBeam.astAttenuators[16].xAttOK
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astAttenuators[16].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(waveform, "$(PREFIX)FullBeamCnst:ST_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.aStoppers?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)FullBeamCnst:Valid_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)FullBeamCnst:Cohort_RBV") {
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nCohortInt?")
  info(archive, "monitor 1: VAL")
}

record(ai, "$(PREFIX)SafeBeamCnst:Attenuation_RBV") {
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.fAtt?")
  field(PREC, "3")
  field(EGU, "%")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:Rate_RBV") {
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.nRate?")
  field(EGU, "Hz")
  info(archive, "monitor 1: VAL")
}

record(ai, "$(PREFIX)SafeBeamCnst:PulseEnergy_RBV") {
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.fPP_mJ?")
  field(PREC, "3")
  field(EGU, "mJ")
  info(autosaveFields_pass0, "PREC")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:PhotonEnergyRanges_RBV") {
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.neVRange?")
  field(EGU, "eV")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:001:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[1].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[1].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:002:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[2].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[2].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:003:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[3].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[3].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:004:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[4].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[4].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:005:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[5].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[5].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:006:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[6].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[6].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:007:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[7].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[7].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:008:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[8].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[8].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:009:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[9].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[9].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:010:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[10].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[10].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:011:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[11].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[11].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:012:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[12].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[12].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:013:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[13].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[13].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:014:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[14].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[14].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:015:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[15].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[15].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:AuxAtt:016:Att_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[16].nAtt
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[16].nAtt?")
  field(EGU, "%")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:001:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[1].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[1].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:002:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[2].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[2].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:003:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[3].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[3].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:004:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[4].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[4].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:005:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[5].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[5].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:006:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[6].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[6].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:007:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[7].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[7].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:008:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[8].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[8].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:009:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[9].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[9].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:010:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[10].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[10].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:011:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[11].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[11].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:012:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[12].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[12].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:013:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[13].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[13].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:014:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[14].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[14].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:015:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[15].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[15].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:AuxAtt:016:OK_RBV") {
  # PMPS_GVL.cstSafeBeam.astAttenuators[16].xAttOK
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.astAttenuators[16].xAttOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(waveform, "$(PREFIX)SafeBeamCnst:ST_RBV") {
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.aStoppers?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  info(archive, "monitor 1: VAL")
}

record(bi, "$(PREFIX)SafeBeamCnst:Valid_RBV") {
  field(DESC, "Safe beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "monitor 1: VAL")
}

record(longin, "$(PREFIX)SafeBeamCnst:Cohort_RBV") {
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstSafeBeam.nCohortInt?")
  info(archive, "monitor 1: VAL")
}

record(waveform, "$(PREFIX)eVRangeCnst_RBV") {
  field(DESC, "eV Range constants")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat32ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.g_areVBoundaries?")
  field(FTVL, "FLOAT")
  field(EGU, "keV")
  field(NELM, "16")
  info(archive, "monitor 1: VAL")
}

record(waveform, "$(PREFIX)eVRangeCnst") {
  field(DESC, "eV Range constants")
  field(DTYP, "asynFloat32ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/PMPS_GVL.g_areVBoundaries=")
  field(FTVL, "FLOAT")
  field(EGU, "keV")
  field(NELM, "16")
  info(autosaveFields_pass0, "VAL")
  info(archive, "monitor 1: VAL")
}

record(bi, "SL1L0:POWER:GO_RBV") {
  field(DESC, "PRG_SL1L0_POWER.bExecuteMotion")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.bExecuteMotion?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:GO") {
  field(DESC, "PRG_SL1L0_POWER.bExecuteMotion")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.bExecuteMotion=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:GO_RBV") {
  field(DESC, "PRG_SL2L0_POWER.bExecuteMotion")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.bExecuteMotion?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:GO") {
  field(DESC, "PRG_SL2L0_POWER.bExecuteMotion")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.bExecuteMotion=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:LOCK_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.bZoomLock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.bZoomLock?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLZ:LOCK") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.bZoomLock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.bZoomLock=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:LOCK_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.bFocusLock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.bFocusLock?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLF:LOCK") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.bFocusLock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.bFocusLock=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MMS:STATE:SET_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  info(archive, "VAL")
}

record(mbbo, "IM1L0:XTES:MMS:STATE:SET") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MMS:STATE:GET_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:01:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:02:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:03:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:04:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:05:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:06:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:07:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:08:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:09:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:10:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:11:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:12:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:13:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:14:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:15:NAME_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:01:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:01:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:02:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:02:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:03:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:03:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:04:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:04:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:05:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:05:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:06:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:06:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:07:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:07:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:08:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:08:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:09:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:09:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:10:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:10:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:11:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:11:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:12:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:12:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:13:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:13:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:14:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:14:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:15:SETPOINT_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:15:SETPOINT") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:01:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:01:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:02:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:02:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:03:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:03:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:04:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:04:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:05:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:05:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:06:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:06:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:07:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:07:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:08:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:08:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:09:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:09:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:10:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:10:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:11:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:11:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:12:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:12:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:13:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:13:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:14:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:14:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:15:DELTA_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:15:DELTA") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:01:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:01:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:02:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:02:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:03:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:03:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:04:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:04:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:05:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:05:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:06:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:06:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:07:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:07:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:08:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:08:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:09:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:09:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:10:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:10:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:11:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:11:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:12:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:12:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:13:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:13:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:14:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:14:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:15:VELO_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:15:VELO") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:01:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:01:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:02:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:02:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:03:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:03:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:04:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:04:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:05:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:05:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:06:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:06:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:07:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:07:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:08:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:08:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:09:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:09:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:10:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:10:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:11:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:11:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:12:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:12:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:13:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:13:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:14:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:14:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:15:ACCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:15:ACCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:01:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:01:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:02:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:02:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:03:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:03:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:04:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:04:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:05:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:05:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:06:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:06:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:07:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:07:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:08:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:08:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:09:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:09:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:10:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:10:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:11:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:11:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:12:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:12:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:13:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:13:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:14:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:14:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:STATE:15:DCCL_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:STATE:15:DCCL") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:01:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:02:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:03:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:04:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:05:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:06:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:07:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:08:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:09:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:10:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:11:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:12:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:13:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:14:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:15:MOVE_OK_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:01:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:02:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:03:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:04:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:05:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:06:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:07:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:08:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:09:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:10:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:11:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:12:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:13:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:14:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:15:LOCKED_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:01:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:02:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:03:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:04:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:05:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:06:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:07:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:08:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:09:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:10:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:11:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:12:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:13:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:14:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:15:VALID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:RESET_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM1L0_XTES.fbIM1...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:MMS:STATE:RESET") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM1L0_XTES.fbIM1...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:ERR_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bError
  field(DESC, "PRG_IM1L0_XTES.fbIM1...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:MMS:STATE:ERRID_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.nErrorId
  field(DESC, "PRG_IM1L0_XTES.fbIM1...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:STATE:ERRMSG_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.sErrorMessage
  field(DESC, "PRG_IM1L0_XTES.fbIM1...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:BUSY_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bBusy
  field(DESC, "PRG_IM1L0_XTES.fbIM1...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:STATE:DONE_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bDone
  field(DESC, "PRG_IM1L0_XTES.fbIM1...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MFW:ERR:RESET_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError
  field(DESC, "PRG_IM1L0_XTES.fbIM1...Wheel.bResetError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:MFW:ERR:RESET") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError
  field(DESC, "PRG_IM1L0_XTES.fbIM1...Wheel.bResetError")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MFW:SET_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos
  field(DESC, "PRG_IM1L0_XTES.fbIM1...lterWheel.nSetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  info(archive, "VAL")
}

record(mbbo, "IM1L0:XTES:MFW:SET") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos
  field(DESC, "PRG_IM1L0_XTES.fbIM1...lterWheel.nSetPos")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MFW:GET_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nGetPos
  field(DESC, "PRG_IM1L0_XTES.fbIM1...lterWheel.nGetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nGetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MFW:ERR:MSG_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.sLastError
  field(DESC, "PRG_IM1L0_XTES.fbIM1...rWheel.sLastError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.sLastError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MFW:RAW:CMD_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd
  field(DESC, "PRG_IM1L0_XTES.fbIM1...rWheel.fbCom.sCmd")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MFW:RAW:CMD") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd
  field(DESC, "PRG_IM1L0_XTES.fbIM1...rWheel.fbCom.sCmd")
  field(DTYP, "asynInt8ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd=")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MFW:RAW:SEND_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend
  field(DESC, "PRG_IM1L0_XTES.fbIM1...Wheel.fbCom.bSend")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:MFW:RAW:SEND") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend
  field(DESC, "PRG_IM1L0_XTES.fbIM1...Wheel.fbCom.bSend")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MFW:RAW:RESP_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sResponse
  field(DESC, "PRG_IM1L0_XTES.fbIM1...l.fbCom.sResponse")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sResponse?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MFW:RAW:DONE_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bDone
  field(DESC, "PRG_IM1L0_XTES.fbIM1...Wheel.fbCom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bDone?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MFW:RAW:ERR:SER_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSerialLineErrorID
  field(DESC, "PRG_IM1L0_XTES.fbIM1...SerialLineErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSerialLineErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MFW:RAW:ERR:SEND_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSendErrorID
  field(DESC, "PRG_IM1L0_XTES.fbIM1...bCom.eSendErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSendErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MFW:RAW:ERR:RECV_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eRecvErrorID
  field(DESC, "PRG_IM1L0_XTES.fbIM1...bCom.eRecvErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eRecvErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CAM:PWR_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CAM:PWR") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CIL:PWR_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CIL:PWR") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CIL:AUTO_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CIL:AUTO") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CIL:CLK:TIMEOUT_RBV") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut?")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CIL:CLK:TIMEOUT") {
  field(DESC, "PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut=")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CIL:CLK:REMAINING_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining
  field(DESC, "PRG_IM1L0_XTES.fbIM1...LED.fLEDRemaining")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining?")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CIL:CLK:REMAINING") {
  # PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining
  field(DESC, "PRG_IM1L0_XTES.fbIM1...LED.fLEDRemaining")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining=")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:SFW:FLOW_RBV") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_IM1L0_XTES.fbIM1...lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:SFW:FLOW") {
  # PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_IM1L0_XTES.fbIM1...lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM1L1:PPM:MMS:STATE:SET_RBV") {
  field(DESC, "PRG_IM1L1_PPM.fbIM1L1.fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
  info(archive, "VAL")
}

record(mbbo, "IM1L1:PPM:MMS:STATE:SET") {
  field(DESC, "PRG_IM1L1_PPM.fbIM1L1.fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM1L1:PPM:MMS:STATE:GET_RBV") {
  field(DESC, "PRG_IM1L1_PPM.fbIM1L1.fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:01:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:02:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:03:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:04:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:05:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:06:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:07:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:08:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:09:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:10:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:11:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:12:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:13:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:14:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:15:NAME_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:01:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:01:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:02:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:02:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:03:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:03:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:04:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:04:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:05:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:05:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:06:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:06:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:07:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:07:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:08:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:08:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:09:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:09:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:10:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:10:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:11:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:11:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:12:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:12:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:13:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:13:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:14:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:14:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:15:SETPOINT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:15:SETPOINT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:01:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:01:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:02:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:02:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:03:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:03:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:04:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:04:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:05:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:05:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:06:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:06:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:07:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:07:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:08:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:08:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:09:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:09:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:10:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:10:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:11:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:11:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:12:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:12:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:13:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:13:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:14:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:14:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:15:DELTA_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:15:DELTA") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:01:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:01:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:02:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:02:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:03:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:03:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:04:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:04:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:05:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:05:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:06:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:06:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:07:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:07:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:08:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:08:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:09:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:09:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:10:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:10:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:11:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:11:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:12:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:12:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:13:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:13:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:14:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:14:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:15:VELO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:15:VELO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:01:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:01:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:02:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:02:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:03:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:03:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:04:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:04:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:05:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:05:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:06:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:06:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:07:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:07:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:08:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:08:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:09:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:09:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:10:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:10:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:11:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:11:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:12:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:12:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:13:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:13:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:14:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:14:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:15:ACCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:15:ACCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:01:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:01:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:02:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:02:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:03:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:03:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:04:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:04:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:05:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:05:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:06:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:06:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:07:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:07:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:08:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:08:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:09:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:09:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:10:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:10:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:11:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:11:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:12:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:12:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:13:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:13:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:14:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:14:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:STATE:15:DCCL_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:STATE:15:DCCL") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:01:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:02:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:03:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:04:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:05:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:06:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:07:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:08:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:09:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:10:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:11:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:12:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:13:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:14:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:15:MOVE_OK_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:01:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:02:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:03:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:04:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:05:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:06:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:07:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:08:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:09:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:10:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:11:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:12:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:13:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:14:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:15:LOCKED_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:01:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:02:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:03:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:04:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:05:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:06:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:07:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:08:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:09:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:10:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:11:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:12:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:13:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:14:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:15:VALID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:RESET_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "IM1L1:PPM:MMS:STATE:RESET") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:ERR_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bError
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(longin, "IM1L1:PPM:MMS:STATE:ERRID_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.nErrorId
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:STATE:ERRMSG_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.sErrorMessage
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:BUSY_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bBusy
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:STATE:DONE_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bDone
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SPM:VOLT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltage
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...werMeter.fVoltage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltage?")
  field(PREC, "3")
  field(EGU, "mV")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:SPM:VOLT_BUFFER_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltageBuffer
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...er.fVoltageBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltageBuffer?")
  field(FTVL, "DOUBLE")
  field(EGU, "mV")
  field(NELM, "1000")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SPM:CALIB_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibBase
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...rMeter.fCalibBase")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibBase?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:SPM:CALIB_BUFFER_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibBaseBuffer
  field(DESC, "PRG_IM1L1_PPM.fbIM1L....fCalibBaseBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibBaseBuffer?")
  field(FTVL, "DOUBLE")
  field(NELM, "1000")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SPM:MJ_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJ
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...werMeter.fCalibMJ")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJ?")
  field(PREC, "3")
  field(EGU, "mJ")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:SPM:MJ_BUFFER_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJBuffer
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...er.fCalibMJBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJBuffer?")
  field(FTVL, "DOUBLE")
  field(EGU, "mJ")
  field(NELM, "1000")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SPM:STC:TEMP_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.fTemp
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...hermoCouple.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.fTemp?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:SPM:STC:CONN_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.bConnected
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...Couple.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:SPM:STC:ERR_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.bError
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ermoCouple.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SPM:CALIB:OFFSET_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelOffset
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...r.fCalibRelOffset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:SPM:CALIB:OFFSET") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelOffset
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...r.fCalibRelOffset")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelOffset=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SPM:CALIB:RATIO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelRatio
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...er.fCalibRelRatio")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelRatio?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:SPM:CALIB:RATIO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelRatio
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...er.fCalibRelRatio")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelRatio=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SPM:CALIB:MJ_RATIO_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJRatio
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ter.fCalibMJRatio")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJRatio?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:SPM:CALIB:MJ_RATIO") {
  # PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJRatio
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ter.fCalibMJRatio")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJRatio=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:CAM:PWR_RBV") {
  field(DESC, "PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM1L1:PPM:CAM:PWR") {
  field(DESC, "PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:CAM:CIL:PCT_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...lluminatorPercent")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:CAM:CIL:PCT") {
  # PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...lluminatorPercent")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM1L1:PPM:SFM:MA_RBV") {
  field(DESC, "PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fRaw")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fRaw?")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:SFM:FLOW_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fFlowRate
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...owMeter.fFlowRate")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fFlowRate?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:YAG:STC:TEMP_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.fTemp
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...hermoCouple.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.fTemp?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:YAG:STC:CONN_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.bConnected
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...Couple.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:YAG:STC:ERR_RBV") {
  # PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.bError
  field(DESC, "PRG_IM1L1_PPM.fbIM1L...ermoCouple.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:LOCK_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.bZoomLock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.bZoomLock?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLZ:LOCK") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.bZoomLock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.bZoomLock=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:LOCK_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.bFocusLock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.bFocusLock?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLF:LOCK") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.bFocusLock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.bFocusLock=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MMS:STATE:SET_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  info(archive, "VAL")
}

record(mbbo, "IM2L0:XTES:MMS:STATE:SET") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MMS:STATE:GET_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:01:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:02:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:03:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:04:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:05:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:06:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:07:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:08:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:09:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:10:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:11:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:12:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:13:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:14:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:15:NAME_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:01:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:01:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:02:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:02:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:03:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:03:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:04:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:04:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:05:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:05:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:06:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:06:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:07:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:07:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:08:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:08:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:09:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:09:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:10:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:10:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:11:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:11:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:12:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:12:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:13:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:13:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:14:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:14:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:15:SETPOINT_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:15:SETPOINT") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:01:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:01:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:02:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:02:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:03:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:03:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:04:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:04:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:05:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:05:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:06:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:06:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:07:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:07:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:08:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:08:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:09:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:09:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:10:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:10:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:11:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:11:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:12:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:12:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:13:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:13:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:14:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:14:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:15:DELTA_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:15:DELTA") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:01:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:01:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:02:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:02:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:03:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:03:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:04:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:04:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:05:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:05:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:06:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:06:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:07:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:07:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:08:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:08:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:09:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:09:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:10:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:10:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:11:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:11:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:12:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:12:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:13:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:13:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:14:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:14:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:15:VELO_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:15:VELO") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:01:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:01:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:02:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:02:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:03:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:03:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:04:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:04:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:05:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:05:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:06:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:06:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:07:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:07:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:08:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:08:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:09:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:09:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:10:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:10:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:11:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:11:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:12:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:12:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:13:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:13:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:14:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:14:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:15:ACCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:15:ACCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:01:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:01:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:02:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:02:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:03:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:03:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:04:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:04:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:05:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:05:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:06:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:06:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:07:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:07:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:08:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:08:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:09:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:09:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:10:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:10:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:11:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:11:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:12:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:12:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:13:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:13:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:14:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:14:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:STATE:15:DCCL_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:STATE:15:DCCL") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:01:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:02:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:03:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:04:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:05:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:06:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:07:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:08:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:09:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:10:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:11:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:12:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:13:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:14:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:15:MOVE_OK_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:01:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:02:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:03:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:04:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:05:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:06:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:07:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:08:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:09:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:10:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:11:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:12:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:13:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:14:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:15:LOCKED_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:01:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:02:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:03:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:04:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:05:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:06:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:07:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:08:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:09:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:10:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:11:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:12:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:13:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:14:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:15:VALID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:RESET_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM2L0_XTES.fbIM2...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:MMS:STATE:RESET") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM2L0_XTES.fbIM2...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:ERR_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bError
  field(DESC, "PRG_IM2L0_XTES.fbIM2...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:MMS:STATE:ERRID_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.nErrorId
  field(DESC, "PRG_IM2L0_XTES.fbIM2...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:STATE:ERRMSG_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.sErrorMessage
  field(DESC, "PRG_IM2L0_XTES.fbIM2...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:BUSY_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bBusy
  field(DESC, "PRG_IM2L0_XTES.fbIM2...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:STATE:DONE_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bDone
  field(DESC, "PRG_IM2L0_XTES.fbIM2...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MFW:ERR:RESET_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError
  field(DESC, "PRG_IM2L0_XTES.fbIM2...Wheel.bResetError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:MFW:ERR:RESET") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError
  field(DESC, "PRG_IM2L0_XTES.fbIM2...Wheel.bResetError")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MFW:SET_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos
  field(DESC, "PRG_IM2L0_XTES.fbIM2...lterWheel.nSetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  info(archive, "VAL")
}

record(mbbo, "IM2L0:XTES:MFW:SET") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos
  field(DESC, "PRG_IM2L0_XTES.fbIM2...lterWheel.nSetPos")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MFW:GET_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nGetPos
  field(DESC, "PRG_IM2L0_XTES.fbIM2...lterWheel.nGetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nGetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MFW:ERR:MSG_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.sLastError
  field(DESC, "PRG_IM2L0_XTES.fbIM2...rWheel.sLastError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.sLastError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MFW:RAW:CMD_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd
  field(DESC, "PRG_IM2L0_XTES.fbIM2...rWheel.fbCom.sCmd")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MFW:RAW:CMD") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd
  field(DESC, "PRG_IM2L0_XTES.fbIM2...rWheel.fbCom.sCmd")
  field(DTYP, "asynInt8ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd=")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MFW:RAW:SEND_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend
  field(DESC, "PRG_IM2L0_XTES.fbIM2...Wheel.fbCom.bSend")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:MFW:RAW:SEND") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend
  field(DESC, "PRG_IM2L0_XTES.fbIM2...Wheel.fbCom.bSend")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MFW:RAW:RESP_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sResponse
  field(DESC, "PRG_IM2L0_XTES.fbIM2...l.fbCom.sResponse")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sResponse?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MFW:RAW:DONE_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bDone
  field(DESC, "PRG_IM2L0_XTES.fbIM2...Wheel.fbCom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bDone?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MFW:RAW:ERR:SER_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSerialLineErrorID
  field(DESC, "PRG_IM2L0_XTES.fbIM2...SerialLineErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSerialLineErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MFW:RAW:ERR:SEND_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSendErrorID
  field(DESC, "PRG_IM2L0_XTES.fbIM2...bCom.eSendErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSendErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MFW:RAW:ERR:RECV_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eRecvErrorID
  field(DESC, "PRG_IM2L0_XTES.fbIM2...bCom.eRecvErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eRecvErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CAM:PWR_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CAM:PWR") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CIL:PWR_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CIL:PWR") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CIL:AUTO_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CIL:AUTO") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CIL:CLK:TIMEOUT_RBV") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut?")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CIL:CLK:TIMEOUT") {
  field(DESC, "PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut=")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CIL:CLK:REMAINING_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining
  field(DESC, "PRG_IM2L0_XTES.fbIM2...LED.fLEDRemaining")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining?")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CIL:CLK:REMAINING") {
  # PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining
  field(DESC, "PRG_IM2L0_XTES.fbIM2...LED.fLEDRemaining")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining=")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:SFW:FLOW_RBV") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_IM2L0_XTES.fbIM2...lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:SFW:FLOW") {
  # PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_IM2L0_XTES.fbIM2...lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM3L0:PPM:MMS:STATE:SET_RBV") {
  field(DESC, "PRG_IM3L0_PPM.fbIM3L0.fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
  info(archive, "VAL")
}

record(mbbo, "IM3L0:PPM:MMS:STATE:SET") {
  field(DESC, "PRG_IM3L0_PPM.fbIM3L0.fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM3L0:PPM:MMS:STATE:GET_RBV") {
  field(DESC, "PRG_IM3L0_PPM.fbIM3L0.fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:01:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:02:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:03:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:04:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:05:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:06:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:07:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:08:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:09:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:10:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:11:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:12:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:13:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:14:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:15:NAME_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:01:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:01:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:02:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:02:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:03:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:03:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:04:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:04:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:05:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:05:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:06:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:06:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:07:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:07:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:08:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:08:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:09:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:09:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:10:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:10:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:11:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:11:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:12:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:12:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:13:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:13:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:14:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:14:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:15:SETPOINT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:15:SETPOINT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:01:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:01:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:02:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:02:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:03:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:03:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:04:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:04:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:05:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:05:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:06:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:06:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:07:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:07:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:08:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:08:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:09:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:09:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:10:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:10:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:11:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:11:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:12:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:12:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:13:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:13:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:14:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:14:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:15:DELTA_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:15:DELTA") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:01:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:01:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:02:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:02:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:03:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:03:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:04:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:04:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:05:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:05:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:06:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:06:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:07:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:07:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:08:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:08:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:09:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:09:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:10:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:10:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:11:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:11:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:12:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:12:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:13:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:13:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:14:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:14:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:15:VELO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:15:VELO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:01:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:01:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:02:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:02:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:03:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:03:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:04:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:04:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:05:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:05:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:06:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:06:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:07:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:07:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:08:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:08:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:09:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:09:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:10:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:10:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:11:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:11:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:12:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:12:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:13:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:13:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:14:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:14:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:15:ACCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:15:ACCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:01:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:01:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:02:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:02:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:03:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:03:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:04:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:04:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:05:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:05:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:06:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:06:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:07:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:07:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:08:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:08:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:09:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:09:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:10:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:10:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:11:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:11:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:12:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:12:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:13:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:13:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:14:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:14:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:STATE:15:DCCL_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:STATE:15:DCCL") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:01:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:02:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:03:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:04:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:05:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:06:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:07:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:08:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:09:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:10:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:11:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:12:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:13:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:14:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:15:MOVE_OK_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:01:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:02:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:03:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:04:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:05:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:06:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:07:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:08:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:09:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:10:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:11:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:12:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:13:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:14:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:15:LOCKED_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:01:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:02:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:03:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:04:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:05:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:06:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:07:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:08:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:09:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:10:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:11:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:12:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:13:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:14:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:15:VALID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:RESET_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "IM3L0:PPM:MMS:STATE:RESET") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:ERR_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bError
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(longin, "IM3L0:PPM:MMS:STATE:ERRID_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.nErrorId
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:STATE:ERRMSG_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.sErrorMessage
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:BUSY_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bBusy
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:STATE:DONE_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bDone
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SPM:VOLT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltage
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...werMeter.fVoltage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltage?")
  field(PREC, "3")
  field(EGU, "mV")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:SPM:VOLT_BUFFER_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltageBuffer
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...er.fVoltageBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltageBuffer?")
  field(FTVL, "DOUBLE")
  field(EGU, "mV")
  field(NELM, "1000")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SPM:CALIB_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibBase
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...rMeter.fCalibBase")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibBase?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:SPM:CALIB_BUFFER_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibBaseBuffer
  field(DESC, "PRG_IM3L0_PPM.fbIM3L....fCalibBaseBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibBaseBuffer?")
  field(FTVL, "DOUBLE")
  field(NELM, "1000")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SPM:MJ_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJ
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...werMeter.fCalibMJ")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJ?")
  field(PREC, "3")
  field(EGU, "mJ")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:SPM:MJ_BUFFER_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJBuffer
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...er.fCalibMJBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJBuffer?")
  field(FTVL, "DOUBLE")
  field(EGU, "mJ")
  field(NELM, "1000")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SPM:STC:TEMP_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.fTemp
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...hermoCouple.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.fTemp?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:SPM:STC:CONN_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.bConnected
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...Couple.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:SPM:STC:ERR_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.bError
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ermoCouple.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SPM:CALIB:OFFSET_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelOffset
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...r.fCalibRelOffset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:SPM:CALIB:OFFSET") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelOffset
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...r.fCalibRelOffset")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelOffset=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SPM:CALIB:RATIO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelRatio
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...er.fCalibRelRatio")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelRatio?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:SPM:CALIB:RATIO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelRatio
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...er.fCalibRelRatio")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelRatio=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SPM:CALIB:MJ_RATIO_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJRatio
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ter.fCalibMJRatio")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJRatio?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:SPM:CALIB:MJ_RATIO") {
  # PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJRatio
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ter.fCalibMJRatio")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJRatio=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:CAM:PWR_RBV") {
  field(DESC, "PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM3L0:PPM:CAM:PWR") {
  field(DESC, "PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:CAM:CIL:PCT_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...lluminatorPercent")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:CAM:CIL:PCT") {
  # PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...lluminatorPercent")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM3L0:PPM:SFM:MA_RBV") {
  field(DESC, "PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fRaw")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fRaw?")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:SFM:FLOW_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fFlowRate
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...owMeter.fFlowRate")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fFlowRate?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:YAG:STC:TEMP_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.fTemp
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...hermoCouple.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.fTemp?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:YAG:STC:CONN_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.bConnected
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...Couple.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:YAG:STC:ERR_RBV") {
  # PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.bError
  field(DESC, "PRG_IM3L0_PPM.fbIM3L...ermoCouple.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:LOCK_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.bZoomLock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.bZoomLock?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLZ:LOCK") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.bZoomLock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.bZoomLock=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:LOCK_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.bFocusLock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.bFocusLock?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLF:LOCK") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.bFocusLock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.bFocusLock=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MMS:STATE:SET_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  info(archive, "VAL")
}

record(mbbo, "IM4L0:XTES:MMS:STATE:SET") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MMS:STATE:GET_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "OUT")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:01:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:02:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:03:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:04:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:05:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:06:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:07:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:08:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:09:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:10:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:11:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:12:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:13:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:14:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:15:NAME_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:01:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:01:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:02:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:02:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:03:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:03:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:04:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:04:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:05:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:05:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:06:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:06:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:07:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:07:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:08:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:08:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:09:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:09:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:10:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:10:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:11:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:11:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:12:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:12:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:13:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:13:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:14:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:14:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:15:SETPOINT_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:15:SETPOINT") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:01:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:01:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:02:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:02:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:03:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:03:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:04:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:04:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:05:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:05:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:06:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:06:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:07:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:07:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:08:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:08:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:09:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:09:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:10:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:10:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:11:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:11:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:12:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:12:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:13:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:13:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:14:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:14:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:15:DELTA_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:15:DELTA") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:01:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:01:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:02:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:02:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:03:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:03:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:04:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:04:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:05:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:05:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:06:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:06:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:07:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:07:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:08:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:08:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:09:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:09:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:10:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:10:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:11:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:11:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:12:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:12:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:13:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:13:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:14:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:14:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:15:VELO_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:15:VELO") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:01:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:01:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:02:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:02:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:03:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:03:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:04:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:04:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:05:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:05:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:06:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:06:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:07:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:07:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:08:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:08:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:09:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:09:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:10:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:10:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:11:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:11:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:12:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:12:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:13:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:13:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:14:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:14:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:15:ACCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:15:ACCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:01:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:01:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:02:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:02:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:03:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:03:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:04:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:04:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:05:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:05:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:06:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:06:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:07:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:07:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:08:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:08:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:09:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:09:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:10:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:10:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:11:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:11:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:12:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:12:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:13:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:13:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:14:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:14:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:STATE:15:DCCL_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:STATE:15:DCCL") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:01:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:02:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:03:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:04:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:05:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:06:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:07:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:08:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:09:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:10:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:11:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:12:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:13:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:14:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:15:MOVE_OK_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:01:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:02:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:03:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:04:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:05:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:06:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:07:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:08:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:09:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:10:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:11:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:12:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:13:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:14:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:15:LOCKED_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:01:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:02:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:03:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:04:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:05:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:06:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:07:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:08:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:09:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:10:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:11:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:12:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:13:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:14:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:15:VALID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:RESET_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM4L0_XTES.fbIM4...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:MMS:STATE:RESET") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bReset
  field(DESC, "PRG_IM4L0_XTES.fbIM4...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:ERR_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bError
  field(DESC, "PRG_IM4L0_XTES.fbIM4...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:MMS:STATE:ERRID_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.nErrorId
  field(DESC, "PRG_IM4L0_XTES.fbIM4...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:STATE:ERRMSG_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.sErrorMessage
  field(DESC, "PRG_IM4L0_XTES.fbIM4...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:BUSY_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bBusy
  field(DESC, "PRG_IM4L0_XTES.fbIM4...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:STATE:DONE_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bDone
  field(DESC, "PRG_IM4L0_XTES.fbIM4...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MFW:ERR:RESET_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError
  field(DESC, "PRG_IM4L0_XTES.fbIM4...Wheel.bResetError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:MFW:ERR:RESET") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError
  field(DESC, "PRG_IM4L0_XTES.fbIM4...Wheel.bResetError")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MFW:SET_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos
  field(DESC, "PRG_IM4L0_XTES.fbIM4...lterWheel.nSetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  info(archive, "VAL")
}

record(mbbo, "IM4L0:XTES:MFW:SET") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos
  field(DESC, "PRG_IM4L0_XTES.fbIM4...lterWheel.nSetPos")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MFW:GET_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nGetPos
  field(DESC, "PRG_IM4L0_XTES.fbIM4...lterWheel.nGetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nGetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MFW:ERR:MSG_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.sLastError
  field(DESC, "PRG_IM4L0_XTES.fbIM4...rWheel.sLastError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.sLastError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MFW:RAW:CMD_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd
  field(DESC, "PRG_IM4L0_XTES.fbIM4...rWheel.fbCom.sCmd")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MFW:RAW:CMD") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd
  field(DESC, "PRG_IM4L0_XTES.fbIM4...rWheel.fbCom.sCmd")
  field(DTYP, "asynInt8ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd=")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MFW:RAW:SEND_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend
  field(DESC, "PRG_IM4L0_XTES.fbIM4...Wheel.fbCom.bSend")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:MFW:RAW:SEND") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend
  field(DESC, "PRG_IM4L0_XTES.fbIM4...Wheel.fbCom.bSend")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MFW:RAW:RESP_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sResponse
  field(DESC, "PRG_IM4L0_XTES.fbIM4...l.fbCom.sResponse")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sResponse?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MFW:RAW:DONE_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bDone
  field(DESC, "PRG_IM4L0_XTES.fbIM4...Wheel.fbCom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bDone?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MFW:RAW:ERR:SER_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSerialLineErrorID
  field(DESC, "PRG_IM4L0_XTES.fbIM4...SerialLineErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSerialLineErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MFW:RAW:ERR:SEND_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSendErrorID
  field(DESC, "PRG_IM4L0_XTES.fbIM4...bCom.eSendErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSendErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MFW:RAW:ERR:RECV_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eRecvErrorID
  field(DESC, "PRG_IM4L0_XTES.fbIM4...bCom.eRecvErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eRecvErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CAM:PWR_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CAM:PWR") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CIL:PWR_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower?")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CIL:PWR") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower=")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CIL:AUTO_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CIL:AUTO") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CIL:CLK:TIMEOUT_RBV") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut?")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CIL:CLK:TIMEOUT") {
  field(DESC, "PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut=")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CIL:CLK:REMAINING_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining
  field(DESC, "PRG_IM4L0_XTES.fbIM4...LED.fLEDRemaining")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining?")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CIL:CLK:REMAINING") {
  # PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining
  field(DESC, "PRG_IM4L0_XTES.fbIM4...LED.fLEDRemaining")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining=")
  field(PREC, "3")
  field(EGU, "min")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:SFW:FLOW_RBV") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_IM4L0_XTES.fbIM4...lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:SFW:FLOW") {
  # PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_IM4L0_XTES.fbIM4...lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:PMPS_OK_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.bMoveOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.bMoveOk?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:TOP:NAME_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:TOP:SETPOINT_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:TOP:SETPOINT") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:TOP:DELTA_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:TOP:DELTA") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:TOP:VELO_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:TOP:VELO") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:TOP:ACCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:TOP:ACCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:TOP:DCCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:TOP:DCCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:MOVE_OK_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:LOCKED_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:VALID_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:GO_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:TOP:GO") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:AT_STATE_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbTop.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:DMOV_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbTop.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:BUSY_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbTop.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:ERR_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbTop.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:TOP:ERRMSG_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbTop.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbTop.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:BOTTOM:NAME_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:BOTTOM:SETPOINT_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:BOTTOM:SETPOINT") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:BOTTOM:DELTA_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:BOTTOM:DELTA") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:BOTTOM:VELO_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:BOTTOM:VELO") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:BOTTOM:ACCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:BOTTOM:ACCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:BOTTOM:DCCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:BOTTOM:DCCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:MOVE_OK_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:LOCKED_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:VALID_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:GO_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute
  field(DESC, "PRG_SL1L0_POWER.fbSL...fbBottom.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:BOTTOM:GO") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute
  field(DESC, "PRG_SL1L0_POWER.fbSL...fbBottom.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:AT_STATE_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbBottom.bAtState
  field(DESC, "PRG_SL1L0_POWER.fbSL...fbBottom.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:DMOV_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbBottom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:BUSY_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbBottom.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:ERR_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbBottom.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:BOTTOM:ERRMSG_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbBottom.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbBottom.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:NORTH:NAME_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:NORTH:SETPOINT_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:NORTH:SETPOINT") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:NORTH:DELTA_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:NORTH:DELTA") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:NORTH:VELO_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:NORTH:VELO") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:NORTH:ACCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:NORTH:ACCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:NORTH:DCCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:NORTH:DCCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:MOVE_OK_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:LOCKED_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:VALID_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:GO_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:NORTH:GO") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:AT_STATE_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbNorth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:DMOV_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbNorth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:BUSY_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbNorth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:ERR_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbNorth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:NORTH:ERRMSG_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbNorth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbNorth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:SOUTH:NAME_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:SOUTH:SETPOINT_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:SOUTH:SETPOINT") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:SOUTH:DELTA_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:SOUTH:DELTA") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:SOUTH:VELO_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:SOUTH:VELO") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:SOUTH:ACCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:SOUTH:ACCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:SOUTH:DCCL_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:SOUTH:DCCL") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:MOVE_OK_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:LOCKED_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:VALID_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:GO_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:SOUTH:GO") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:AT_STATE_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbSouth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:DMOV_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbSouth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:BUSY_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbSouth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:ERR_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbSouth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:SOUTH:ERRMSG_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.fbSouth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbSouth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:XWID_REQ_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX
  field(DESC, "PRG_SL1L0_POWER.fbSL...rReqApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:XWID_REQ") {
  # PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX
  field(DESC, "PRG_SL1L0_POWER.fbSL...rReqApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:YWID_REQ_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY
  field(DESC, "PRG_SL1L0_POWER.fbSL...rReqApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:YWID_REQ") {
  # PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY
  field(DESC, "PRG_SL1L0_POWER.fbSL...rReqApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:XCEN_REQ_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rReqCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rReqCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:XCEN_REQ") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rReqCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rReqCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:YCEN_REQ_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rReqCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rReqCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:YCEN_REQ") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rReqCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rReqCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:ACTUAL_XWIDTH_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX
  field(DESC, "PRG_SL1L0_POWER.fbSL...rActApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:ACTUAL_XWIDTH") {
  # PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX
  field(DESC, "PRG_SL1L0_POWER.fbSL...rActApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:ACTUAL_YWIDTH_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY
  field(DESC, "PRG_SL1L0_POWER.fbSL...rActApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:ACTUAL_YWIDTH") {
  # PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY
  field(DESC, "PRG_SL1L0_POWER.fbSL...rActApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:ACTUAL_XCENTER_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rActCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rActCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:ACTUAL_XCENTER") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rActCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rActCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:ACTUAL_YCENTER_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rActCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rActCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:ACTUAL_YCENTER") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rActCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rActCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:XCEN_SETZERO_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rSetCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rSetCenterX?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:XCEN_SETZERO") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rSetCenterX")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rSetCenterX=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:YCEN_SETZERO_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rSetCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.rSetCenterY?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:YCEN_SETZERO") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.rSetCenterY")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.rSetCenterY=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:OPEN_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.bOpen")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.bOpen?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:OPEN") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.bOpen")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.bOpen=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:CLOSE_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.bClose")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.bClose?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:CLOSE") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.bClose")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.bClose=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BLOCK_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.bBlock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.bBlock?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:BLOCK") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.bBlock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.bBlock=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:FSW:FLOW_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_SL1L0_POWER.fbSL...lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:FSW:FLOW") {
  # PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_SL1L0_POWER.fbSL...lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:TOP:RTD:01:TEMP_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:RTD:01:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL..._TOP_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:RTD:01:ERR_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:TOP:RTD:02:TEMP_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:RTD:02:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL..._TOP_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:TOP:RTD:02:ERR_RBV") {
  field(DESC, "PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:BOTTOM:RTD:01:TEMP_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.fTemp
  field(DESC, "PRG_SL1L0_POWER.fbSL...TD_Bottom_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:RTD:01:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL...ttom_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:RTD:01:ERR_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bError
  field(DESC, "PRG_SL1L0_POWER.fbSL...D_Bottom_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:BOTTOM:RTD:02:TEMP_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.fTemp
  field(DESC, "PRG_SL1L0_POWER.fbSL...TD_Bottom_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:RTD:02:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL...ttom_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:BOTTOM:RTD:02:ERR_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bError
  field(DESC, "PRG_SL1L0_POWER.fbSL...D_Bottom_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:NORTH:RTD:01:TEMP_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.fTemp
  field(DESC, "PRG_SL1L0_POWER.fbSL...RTD_North_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:RTD:01:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL...orth_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:RTD:01:ERR_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bError
  field(DESC, "PRG_SL1L0_POWER.fbSL...TD_North_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:NORTH:RTD:02:TEMP_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.fTemp
  field(DESC, "PRG_SL1L0_POWER.fbSL...RTD_North_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:RTD:02:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL...orth_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:NORTH:RTD:02:ERR_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bError
  field(DESC, "PRG_SL1L0_POWER.fbSL...TD_North_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:SOUTH:RTD:01:TEMP_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.fTemp
  field(DESC, "PRG_SL1L0_POWER.fbSL...RTD_South_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:RTD:01:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL...outh_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:RTD:01:ERR_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bError
  field(DESC, "PRG_SL1L0_POWER.fbSL...TD_South_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:SOUTH:RTD:02:TEMP_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.fTemp
  field(DESC, "PRG_SL1L0_POWER.fbSL...RTD_South_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:RTD:02:CONN_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bConnected
  field(DESC, "PRG_SL1L0_POWER.fbSL...outh_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:SOUTH:RTD:02:ERR_RBV") {
  # PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bError
  field(DESC, "PRG_SL1L0_POWER.fbSL...TD_South_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:PMPS_OK_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.bMoveOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.bMoveOk?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:TOP:NAME_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:TOP:SETPOINT_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:TOP:SETPOINT") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:TOP:DELTA_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:TOP:DELTA") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:TOP:VELO_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:TOP:VELO") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:TOP:ACCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:TOP:ACCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:TOP:DCCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:TOP:DCCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:MOVE_OK_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:LOCKED_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:VALID_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:GO_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:TOP:GO") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:AT_STATE_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbTop.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:DMOV_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbTop.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:BUSY_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbTop.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:ERR_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbTop.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:TOP:ERRMSG_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbTop.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbTop.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:BOTTOM:NAME_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:BOTTOM:SETPOINT_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:BOTTOM:SETPOINT") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:BOTTOM:DELTA_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:BOTTOM:DELTA") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:BOTTOM:VELO_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:BOTTOM:VELO") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:BOTTOM:ACCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:BOTTOM:ACCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:BOTTOM:DCCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:BOTTOM:DCCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:MOVE_OK_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:LOCKED_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:VALID_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:GO_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute
  field(DESC, "PRG_SL2L0_POWER.fbSL...fbBottom.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:BOTTOM:GO") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute
  field(DESC, "PRG_SL2L0_POWER.fbSL...fbBottom.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:AT_STATE_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbBottom.bAtState
  field(DESC, "PRG_SL2L0_POWER.fbSL...fbBottom.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:DMOV_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbBottom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:BUSY_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbBottom.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:ERR_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbBottom.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:BOTTOM:ERRMSG_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbBottom.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbBottom.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:NORTH:NAME_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:NORTH:SETPOINT_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:NORTH:SETPOINT") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:NORTH:DELTA_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:NORTH:DELTA") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:NORTH:VELO_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:NORTH:VELO") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:NORTH:ACCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:NORTH:ACCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:NORTH:DCCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:NORTH:DCCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:MOVE_OK_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:LOCKED_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:VALID_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:GO_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:NORTH:GO") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:AT_STATE_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbNorth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:DMOV_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbNorth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:BUSY_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbNorth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:ERR_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbNorth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:NORTH:ERRMSG_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbNorth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbNorth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:SOUTH:NAME_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.sName
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:SOUTH:SETPOINT_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:SOUTH:SETPOINT") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fPosition
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:SOUTH:DELTA_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDelta?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:SOUTH:DELTA") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDelta
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:SOUTH:VELO_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:SOUTH:VELO") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fVelocity
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:SOUTH:ACCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:SOUTH:ACCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fAccel
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:SOUTH:DCCL_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:SOUTH:DCCL") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDecel
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:MOVE_OK_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.bMoveOk
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:LOCKED_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.bLocked
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:VALID_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.bValid
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:GO_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:SOUTH:GO") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:AT_STATE_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbSouth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:DMOV_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbSouth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:BUSY_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbSouth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:ERR_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbSouth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:SOUTH:ERRMSG_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.fbSouth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbSouth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:XWID_REQ_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX
  field(DESC, "PRG_SL2L0_POWER.fbSL...rReqApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:XWID_REQ") {
  # PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX
  field(DESC, "PRG_SL2L0_POWER.fbSL...rReqApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:YWID_REQ_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY
  field(DESC, "PRG_SL2L0_POWER.fbSL...rReqApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:YWID_REQ") {
  # PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY
  field(DESC, "PRG_SL2L0_POWER.fbSL...rReqApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:XCEN_REQ_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rReqCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rReqCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:XCEN_REQ") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rReqCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rReqCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:YCEN_REQ_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rReqCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rReqCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:YCEN_REQ") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rReqCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rReqCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:ACTUAL_XWIDTH_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX
  field(DESC, "PRG_SL2L0_POWER.fbSL...rActApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:ACTUAL_XWIDTH") {
  # PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX
  field(DESC, "PRG_SL2L0_POWER.fbSL...rActApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:ACTUAL_YWIDTH_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY
  field(DESC, "PRG_SL2L0_POWER.fbSL...rActApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:ACTUAL_YWIDTH") {
  # PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY
  field(DESC, "PRG_SL2L0_POWER.fbSL...rActApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:ACTUAL_XCENTER_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rActCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rActCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:ACTUAL_XCENTER") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rActCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rActCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:ACTUAL_YCENTER_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rActCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rActCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:ACTUAL_YCENTER") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rActCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rActCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:XCEN_SETZERO_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rSetCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rSetCenterX?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:XCEN_SETZERO") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rSetCenterX")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rSetCenterX=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:YCEN_SETZERO_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rSetCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.rSetCenterY?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:YCEN_SETZERO") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.rSetCenterY")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.rSetCenterY=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:OPEN_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.bOpen")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.bOpen?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:OPEN") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.bOpen")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.bOpen=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:CLOSE_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.bClose")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.bClose?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:CLOSE") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.bClose")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.bClose=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BLOCK_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.bBlock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.bBlock?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:BLOCK") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.bBlock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.bBlock=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:FSW:FLOW_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_SL2L0_POWER.fbSL...lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:FSW:FLOW") {
  # PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk
  field(DESC, "PRG_SL2L0_POWER.fbSL...lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "LOW")
  field(ONAM, "OK")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:TOP:RTD:01:TEMP_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:RTD:01:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL..._TOP_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:RTD:01:ERR_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:TOP:RTD:02:TEMP_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:RTD:02:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL..._TOP_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:TOP:RTD:02:ERR_RBV") {
  field(DESC, "PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:BOTTOM:RTD:01:TEMP_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.fTemp
  field(DESC, "PRG_SL2L0_POWER.fbSL...TD_Bottom_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:RTD:01:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL...ttom_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:RTD:01:ERR_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bError
  field(DESC, "PRG_SL2L0_POWER.fbSL...D_Bottom_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:BOTTOM:RTD:02:TEMP_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.fTemp
  field(DESC, "PRG_SL2L0_POWER.fbSL...TD_Bottom_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:RTD:02:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL...ttom_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:BOTTOM:RTD:02:ERR_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bError
  field(DESC, "PRG_SL2L0_POWER.fbSL...D_Bottom_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:NORTH:RTD:01:TEMP_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.fTemp
  field(DESC, "PRG_SL2L0_POWER.fbSL...RTD_North_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:RTD:01:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL...orth_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:RTD:01:ERR_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bError
  field(DESC, "PRG_SL2L0_POWER.fbSL...TD_North_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:NORTH:RTD:02:TEMP_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.fTemp
  field(DESC, "PRG_SL2L0_POWER.fbSL...RTD_North_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:RTD:02:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL...orth_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:NORTH:RTD:02:ERR_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bError
  field(DESC, "PRG_SL2L0_POWER.fbSL...TD_North_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:SOUTH:RTD:01:TEMP_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.fTemp
  field(DESC, "PRG_SL2L0_POWER.fbSL...RTD_South_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:RTD:01:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL...outh_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:RTD:01:ERR_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bError
  field(DESC, "PRG_SL2L0_POWER.fbSL...TD_South_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:SOUTH:RTD:02:TEMP_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.fTemp
  field(DESC, "PRG_SL2L0_POWER.fbSL...RTD_South_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:RTD:02:CONN_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bConnected
  field(DESC, "PRG_SL2L0_POWER.fbSL...outh_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:SOUTH:RTD:02:ERR_RBV") {
  # PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bError
  field(DESC, "PRG_SL2L0_POWER.fbSL...TD_South_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:01:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:01:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:01:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:01:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:01:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:01:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:01:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:01:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:01:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:01:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:01:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:01:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:01:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:01:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:01:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:01:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:01:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:01:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:01:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:01:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:01:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:01:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:01:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:01:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:02:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:02:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:02:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:02:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:02:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:02:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:02:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:02:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:02:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:02:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:02:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:02:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:02:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:02:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:02:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:02:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:02:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:02:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:02:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:02:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:02:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:02:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:02:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:02:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:03:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:03:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:03:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:03:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:03:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:03:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:03:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:03:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:03:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:03:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:03:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:03:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:03:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:03:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:03:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:03:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:03:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:03:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:03:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:03:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:03:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:03:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:03:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:03:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:04:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:04:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:04:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:04:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:04:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:04:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:04:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:04:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:04:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:04:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:04:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:04:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:04:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:04:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:04:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:04:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:04:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:04:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:04:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:04:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:04:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:04:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:04:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:04:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:05:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:05:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:05:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:05:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:05:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:05:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:05:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:05:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:05:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:05:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:05:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:05:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:05:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:05:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:05:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:05:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:05:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:05:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:05:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:05:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:05:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:05:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:05:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:05:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:06:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:06:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:06:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:06:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:06:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:06:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:06:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:06:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:06:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:06:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:06:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:06:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:06:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:06:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:06:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:06:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:06:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:06:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:06:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:06:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:06:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:06:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:06:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:06:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:07:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:07:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:07:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:07:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:07:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:07:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:07:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:07:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:07:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:07:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:07:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:07:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:07:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:07:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:07:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:07:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:07:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:07:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:07:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:07:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:07:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:07:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:07:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:07:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:08:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:08:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:08:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:08:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:08:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:08:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:08:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:08:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:08:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:08:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:08:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:08:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:08:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:08:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:08:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:08:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:08:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:08:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:08:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:08:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:08:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:08:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:08:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:08:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:09:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:09:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:09:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:09:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:09:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:09:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:09:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:09:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:09:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:09:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:09:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:09:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:09:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:09:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:09:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:09:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:09:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:09:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:09:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:09:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:09:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:09:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:09:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:09:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:10:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:10:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:10:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:10:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:10:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:10:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:10:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:10:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:10:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:10:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:10:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:10:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:10:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:10:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:10:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:10:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:10:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:10:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:10:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:10:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M10.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:10:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:10:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:10:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:10:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M10.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:11:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:11:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:11:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:11:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:11:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:11:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:11:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:11:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:11:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:11:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:11:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:11:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:11:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:11:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:11:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:11:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:11:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:11:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:11:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:11:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M11.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:11:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:11:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:11:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:11:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M11.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:12:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:12:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:12:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:12:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:12:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:12:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:12:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:12:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:12:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:12:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:12:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:12:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:12:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:12:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:12:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:12:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:12:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:12:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:12:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:12:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M12.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:12:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:12:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:12:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:12:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M12.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:13:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:13:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:13:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:13:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:13:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:13:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:13:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:13:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:13:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:13:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:13:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:13:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:13:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:13:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:13:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:13:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:13:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:13:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:13:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:13:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M13.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:13:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:13:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:13:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:13:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M13.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:14:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:14:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:14:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:14:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:14:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:14:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:14:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:14:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:14:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:14:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:14:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:14:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:14:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:14:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:14:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:14:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:14:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:14:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:14:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:14:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:14:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:14:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:14:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:14:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:15:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:15:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:15:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:15:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:15:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:15:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:15:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:15:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:15:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:15:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:15:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:15:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:15:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:15:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:15:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:15:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:15:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:15:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:15:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:15:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:15:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:15:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:15:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:15:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:16:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:16:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:16:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:16:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:16:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:16:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:16:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:16:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:16:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:16:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:16:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:16:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:16:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:16:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:16:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:16:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:16:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:16:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:16:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:16:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:16:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:16:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:16:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:16:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:17:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:17:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:17:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:17:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:17:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:17:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:17:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:17:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:17:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:17:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:17:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:17:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:17:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:17:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:17:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:17:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:17:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:17:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:17:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:17:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M17.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:17:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:17:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:17:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:17:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M17.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:18:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:18:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:18:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:18:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:18:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:18:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:18:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:18:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:18:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:18:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:18:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:18:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:18:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:18:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:18:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:18:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:18:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:18:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:18:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:18:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:18:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:18:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:18:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:18:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:19:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:19:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "AT2L0:XTES:MMS:19:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:19:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:19:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "AT2L0:XTES:MMS:19:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:19:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nCommand?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:19:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:19:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nCmdData?")
  info(archive, "VAL")
}

record(longout, "AT2L0:XTES:MMS:19:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:19:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:19:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:19:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:19:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:19:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:19:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:19:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:19:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "AT2L0:XTES:MMS:19:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "AT2L0:XTES:MMS:19:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:19:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "AT2L0:XTES:MMS:19:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "AT2L0:XTES:MMS:19:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "AT2L0:XTES:MMS:19:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM1L0:XTES:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM1L0:XTES:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:CLZ:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:CLZ:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:CLZ:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLZ:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLZ:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLZ:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLZ:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM1L0:XTES:CLZ:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLZ:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM1L0:XTES:CLZ:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLZ:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLZ:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLZ:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLZ:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLZ:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLZ:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLZ:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLZ:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLZ:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLZ:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLZ:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLZ:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLZ:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:CLZ:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:CLF:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:CLF:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM1L0:XTES:CLF:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLF:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLF:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L0:XTES:CLF:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLF:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM1L0:XTES:CLF:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLF:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM1L0:XTES:CLF:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLF:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLF:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLF:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLF:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLF:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLF:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLF:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLF:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L0:XTES:CLF:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L0:XTES:CLF:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLF:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L0:XTES:CLF:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM1L0:XTES:CLF:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM1L0:XTES:CLF:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM1L1:PPM:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM1L1:PPM:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM1L1:PPM:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L1:PPM:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L1:PPM:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM1L1:PPM:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L1:PPM:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM1L1:PPM:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM1L1:PPM:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM1L1:PPM:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM1L1:PPM:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM1L1:PPM:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM1L1:PPM:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM1L1:PPM:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM1L1:PPM:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM1L1:PPM:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM2L0:XTES:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM2L0:XTES:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:CLZ:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:CLZ:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:CLZ:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLZ:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLZ:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLZ:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLZ:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM2L0:XTES:CLZ:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLZ:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM2L0:XTES:CLZ:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLZ:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLZ:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLZ:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLZ:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLZ:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLZ:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLZ:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLZ:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLZ:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLZ:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLZ:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLZ:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLZ:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:CLZ:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:CLF:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:CLF:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM2L0:XTES:CLF:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLF:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLF:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM2L0:XTES:CLF:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLF:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM2L0:XTES:CLF:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLF:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM2L0:XTES:CLF:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLF:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLF:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLF:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLF:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLF:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLF:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLF:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLF:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM2L0:XTES:CLF:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM2L0:XTES:CLF:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M26.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLF:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM2L0:XTES:CLF:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM2L0:XTES:CLF:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM2L0:XTES:CLF:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M26.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM3L0:PPM:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM3L0:PPM:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM3L0:PPM:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM3L0:PPM:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM3L0:PPM:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM3L0:PPM:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM3L0:PPM:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM3L0:PPM:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM3L0:PPM:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM3L0:PPM:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM3L0:PPM:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM3L0:PPM:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M27.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM3L0:PPM:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM3L0:PPM:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM3L0:PPM:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM3L0:PPM:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M27.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM4L0:XTES:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM4L0:XTES:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M28.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M28.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:CLZ:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:CLZ:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:CLZ:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLZ:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLZ:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLZ:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLZ:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM4L0:XTES:CLZ:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLZ:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM4L0:XTES:CLZ:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLZ:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLZ:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLZ:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLZ:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLZ:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLZ:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLZ:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLZ:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLZ:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLZ:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M29.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLZ:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLZ:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLZ:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:CLZ:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M29.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:CLF:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:CLF:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "IM4L0:XTES:CLF:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLF:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLF:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "IM4L0:XTES:CLF:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLF:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.nCommand?")
  info(archive, "VAL")
}

record(longout, "IM4L0:XTES:CLF:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLF:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.nCmdData?")
  info(archive, "VAL")
}

record(longout, "IM4L0:XTES:CLF:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLF:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLF:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLF:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLF:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLF:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLF:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLF:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLF:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "IM4L0:XTES:CLF:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "IM4L0:XTES:CLF:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M30.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLF:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "IM4L0:XTES:CLF:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "IM4L0:XTES:CLF:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "IM4L0:XTES:CLF:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M30.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "PF1L0:WFS:MMS:01:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "PF1L0:WFS:MMS:01:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "PF1L0:WFS:MMS:01:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "PF1L0:WFS:MMS:01:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "PF1L0:WFS:MMS:01:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "PF1L0:WFS:MMS:01:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:01:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.nCommand?")
  info(archive, "VAL")
}

record(longout, "PF1L0:WFS:MMS:01:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:01:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.nCmdData?")
  info(archive, "VAL")
}

record(longout, "PF1L0:WFS:MMS:01:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:01:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:01:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:01:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:01:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:01:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:01:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:01:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:01:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:01:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:01:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M31.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:01:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:01:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:01:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "PF1L0:WFS:MMS:01:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M31.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "PF1L0:WFS:MMS:02:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "PF1L0:WFS:MMS:02:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "PF1L0:WFS:MMS:02:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "PF1L0:WFS:MMS:02:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "PF1L0:WFS:MMS:02:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "PF1L0:WFS:MMS:02:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:02:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.nCommand?")
  info(archive, "VAL")
}

record(longout, "PF1L0:WFS:MMS:02:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:02:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.nCmdData?")
  info(archive, "VAL")
}

record(longout, "PF1L0:WFS:MMS:02:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:02:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:02:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:02:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:02:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:02:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:02:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:02:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:02:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "PF1L0:WFS:MMS:02:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "PF1L0:WFS:MMS:02:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M32.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:02:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "PF1L0:WFS:MMS:02:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "PF1L0:WFS:MMS:02:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "PF1L0:WFS:MMS:02:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M32.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:BOTTOM:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:BOTTOM:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:BOTTOM:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:BOTTOM:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:BOTTOM:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:BOTTOM:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:BOTTOM:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:BOTTOM:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:BOTTOM:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:BOTTOM:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:BOTTOM:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M41.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:BOTTOM:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M41.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:SOUTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:SOUTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:SOUTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:SOUTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:SOUTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:SOUTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:SOUTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:SOUTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:SOUTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:SOUTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:SOUTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:SOUTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:SOUTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M42.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:SOUTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M42.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:TOP:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:TOP:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:TOP:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:TOP:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:TOP:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:TOP:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:TOP:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:TOP:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:TOP:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:TOP:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:TOP:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:TOP:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:TOP:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:TOP:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:TOP:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:TOP:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:TOP:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:TOP:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:TOP:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:TOP:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M43.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:TOP:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:TOP:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M43.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:NORTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL1L0:POWER:MMS:NORTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:NORTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:NORTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL1L0:POWER:MMS:NORTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:NORTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:NORTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:NORTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL1L0:POWER:MMS:NORTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:NORTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:NORTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:NORTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:NORTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:NORTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:NORTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:NORTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:NORTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL1L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL1L0:POWER:MMS:NORTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M44.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL1L0:POWER:MMS:NORTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL1L0:POWER:MMS:NORTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL1L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M44.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:BOTTOM:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:BOTTOM:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:BOTTOM:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:BOTTOM:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:BOTTOM:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:BOTTOM:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:BOTTOM:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:BOTTOM:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:BOTTOM:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:BOTTOM:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:BOTTOM:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M45.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:BOTTOM:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M45.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:SOUTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:SOUTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:SOUTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:SOUTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:SOUTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:SOUTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:SOUTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:SOUTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:SOUTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:SOUTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:SOUTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:SOUTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:SOUTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M46.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:SOUTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M46.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:TOP:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:TOP:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:TOP:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:TOP:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:TOP:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:TOP:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:TOP:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:TOP:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:TOP:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:TOP:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:TOP:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:TOP:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:TOP:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:TOP:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:TOP:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:TOP:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:TOP:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:TOP:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:TOP:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:TOP:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M47.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:TOP:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:TOP:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M47.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:NORTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SL2L0:POWER:MMS:NORTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:NORTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:NORTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SL2L0:POWER:MMS:NORTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:NORTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.nCommand?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:NORTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:NORTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SL2L0:POWER:MMS:NORTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:NORTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:NORTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:NORTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:NORTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:NORTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:NORTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:NORTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:NORTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SL2L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SL2L0:POWER:MMS:NORTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M48.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SL2L0:POWER:MMS:NORTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SL2L0:POWER:MMS:NORTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SL2L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M48.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.nCommand?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M49.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M49.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.nCommand?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M50.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SP1L0:KMONO:MMS:XTAL_VERT:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M50.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.nCommand?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M51.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SP1L0:KMONO:MMS:RET_HORIZ:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M51.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:RET_VERT:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:RET_VERT:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:RET_VERT:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:RET_VERT:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:RET_VERT:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:RET_VERT:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_VERT:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.nCommand?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:RET_VERT:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_VERT:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:RET_VERT:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_VERT:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_VERT:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_VERT:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_VERT:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_VERT:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_VERT:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_VERT:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_VERT:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M52.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_VERT:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:RET_VERT:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:RET_VERT:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SP1L0:KMONO:MMS:RET_VERT:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M52.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.nCommand?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M53.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M53.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
  info(archive, "VAL")
}

record(mbbi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.nCommand?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.nCommand=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.nCmdData?")
  info(archive, "VAL")
}

record(longout, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.nCmdData=")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(ai, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
  info(archive, "VAL")
}

record(ao, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M54.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.nMotionAxisID?")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(bi, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
  info(archive, "VAL")
}

record(longin, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.nErrorId?")
  info(archive, "VAL")
}

record(waveform, "SP1L0:KMONO:MMS:DIODE_VERT:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M54.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:FF_Reset_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.i_xReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.i_xReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:01:FF_Reset") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.i_xReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_01.i_xReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:IN_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.i_bInLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.i_bInLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:OUT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.i_bOutLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.i_bOutLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:INSERT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.q_bRetract")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.q_bRetract?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:RETRACT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.q_bInsert")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.q_bInsert?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:ILKOK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.bILK_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.bILK_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:INSERT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.bInsertOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.bInsertOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:RETRACT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.bRetractOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.bRetractOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:IN_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:01:IN_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:OUT_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:01:OUT_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:ERROR_RBV") {
  # RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_01...Act.bErrorPresent")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:01:ERROR") {
  # RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_01...Act.bErrorPresent")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "RTDSL0:MPA:01:POS_STATE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.q_stAct.eState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.q_stAct.eState?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "RETRACTED")
  field(ONST, "INSERTED")
  field(TWST, "MOVING")
  field(THST, "INVALID")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:MPS_FAULT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.xMPS_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.xMPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:01:MPS_FAULT") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.xMPS_OK")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_01.xMPS_OK=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:01:MOT_DONE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.xDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_01.xDone?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:01:MOT_DONE") {
  field(DESC, "RTDSL0.RTDSL0_MPA_01.xDone")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_01.xDone=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:FF_Reset_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.i_xReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.i_xReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:02:FF_Reset") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.i_xReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_02.i_xReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:IN_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.i_bInLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.i_bInLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:OUT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.i_bOutLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.i_bOutLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:INSERT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.q_bRetract")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.q_bRetract?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:RETRACT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.q_bInsert")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.q_bInsert?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:ILKOK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.bILK_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.bILK_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:INSERT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.bInsertOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.bInsertOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:RETRACT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.bRetractOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.bRetractOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:IN_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:02:IN_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:OUT_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:02:OUT_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:ERROR_RBV") {
  # RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_02...Act.bErrorPresent")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:02:ERROR") {
  # RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_02...Act.bErrorPresent")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "RTDSL0:MPA:02:POS_STATE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.q_stAct.eState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.q_stAct.eState?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "RETRACTED")
  field(ONST, "INSERTED")
  field(TWST, "MOVING")
  field(THST, "INVALID")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:MPS_FAULT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.xMPS_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.xMPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:02:MPS_FAULT") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.xMPS_OK")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_02.xMPS_OK=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:02:MOT_DONE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.xDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_02.xDone?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:02:MOT_DONE") {
  field(DESC, "RTDSL0.RTDSL0_MPA_02.xDone")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_02.xDone=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:FF_Reset_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.i_xReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.i_xReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:03:FF_Reset") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.i_xReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_03.i_xReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:IN_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.i_bInLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.i_bInLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:OUT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.i_bOutLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.i_bOutLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:INSERT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.q_bRetract")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.q_bRetract?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:RETRACT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.q_bInsert")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.q_bInsert?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:ILKOK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.bILK_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.bILK_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:INSERT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.bInsertOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.bInsertOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:RETRACT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.bRetractOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.bRetractOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:IN_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:03:IN_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:OUT_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:03:OUT_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:ERROR_RBV") {
  # RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_03...Act.bErrorPresent")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:03:ERROR") {
  # RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_03...Act.bErrorPresent")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "RTDSL0:MPA:03:POS_STATE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.q_stAct.eState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.q_stAct.eState?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "RETRACTED")
  field(ONST, "INSERTED")
  field(TWST, "MOVING")
  field(THST, "INVALID")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:MPS_FAULT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.xMPS_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.xMPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:03:MPS_FAULT") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.xMPS_OK")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_03.xMPS_OK=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:03:MOT_DONE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.xDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_03.xDone?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:03:MOT_DONE") {
  field(DESC, "RTDSL0.RTDSL0_MPA_03.xDone")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_03.xDone=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:FF_Reset_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.i_xReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.i_xReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:04:FF_Reset") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.i_xReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_04.i_xReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:IN_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.i_bInLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.i_bInLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:OUT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.i_bOutLS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.i_bOutLS?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:INSERT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.q_bRetract")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.q_bRetract?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:RETRACT_DO_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.q_bInsert")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.q_bInsert?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:ILKOK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.bILK_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.bILK_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:INSERT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.bInsertOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.bInsertOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:RETRACT_OK_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.bRetractOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.bRetractOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:IN_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:04:IN_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:OUT_CMD_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:04:OUT_CMD") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:ERROR_RBV") {
  # RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_04...Act.bErrorPresent")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:04:ERROR") {
  # RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent
  field(DESC, "RTDSL0.RTDSL0_MPA_04...Act.bErrorPresent")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(mbbi, "RTDSL0:MPA:04:POS_STATE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.q_stAct.eState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.q_stAct.eState?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "RETRACTED")
  field(ONST, "INSERTED")
  field(TWST, "MOVING")
  field(THST, "INVALID")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:MPS_FAULT_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.xMPS_OK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.xMPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:04:MPS_FAULT") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.xMPS_OK")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_04.xMPS_OK=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(bi, "RTDSL0:MPA:04:MOT_DONE_RBV") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.xDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/RTDSL0.RTDSL0_MPA_04.xDone?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(archive, "VAL")
}

record(bo, "RTDSL0:MPA:04:MOT_DONE") {
  field(DESC, "RTDSL0.RTDSL0_MPA_04.xDone")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/RTDSL0.RTDSL0_MPA_04.xDone=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
  info(archive, "VAL")
}

record(longin, "$(PREFIX)SuccessfulPreemptions_RBV") {
  field(DESC, "PMPS_GVL.SuccessfulPreemption")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.SuccessfulPreemption?")
  info(archive, "VAL")
}

record(longin, "$(PREFIX)AccumulatedFastFaults_RBV") {
  field(DESC, "PMPS_GVL.AccumulatedFF")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.AccumulatedFF?")
  info(archive, "VAL")
}```
